(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    155266,       3533]
NotebookOptionsPosition[    144670,       3341]
NotebookOutlinePosition[    145107,       3358]
CellTagsIndexPosition[    145064,       3355]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "@", 
      RowBox[{"Zeta", "[", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], ",", 
     RowBox[{"Im", "@", 
      RowBox[{"Zeta", "[", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Im", "@", 
          RowBox[{"ZetaZero", "[", "1", "]"}]}], ",", "0"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.9289325198742447`*^9, 3.928932546558076*^9}, {
  3.9289326122342443`*^9, 3.928932697544649*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"00b39efb-f019-4b3c-8f93-1225d904a89c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUWXk41N8XNkOWUtnXyjJjH8sMrcq5UUlJihRtQookCVnKN5FUCIlIQkK0
KBJSnytrJcm+k33PPmP/ze+ved7n3nvOe97z3plzn5GzuXL0PJmDg0Oai4Pj
/583+w9Nrqxo4yuPvrfl+rdAn4/YTMuiNv7T+lqkwqQVTAQ6mJ/mtLHE01M7
e6XbQHa7y9KVKW3ceGHtFnJBO3y7H8Hb2aeNO7UvLV/g+wu8Gg2b8C9t7P/B
OPtvUA9EulkfvPVUG78omLzHtWoElnhVTE490cZchX2132+NgP2zCdNtj7Xx
OEcYtW9xBLaW3rYYD9XGemLzwmtnR6FZ/OU569va+Feobonb8D+Q/Tx4HTlo
46/Wer8bxiYgg3QtmWOrNj73S0hJsXUGtpmlc8doa+PoF6antGRmoTT570W6
FjuenOABLptZ6DQ0VbdR0cbkvnvVC32zIBaqnlMkrY0X0xUtK0aZcFtqoCyQ
Qxvnrel9sGFkDgScZFRllhjYYc270O2q8/Dsi0XwpzkG9jEPXDN6YR5yrUtM
ByYZmKszLWJN1zyMpiQ1GfUysPBza4e6qgU4oX16mP8HA9cb+U+rRS1BX0Dk
oZelDFxjOEE7XbEE1+p/vttVxMBbLyZT50jLEOq1w825gIEjdGufXbi0DEWE
+NLvtwysrT463LplBUwFD5+9mMHAq4hJAfmLK9BuE1jIkcbArx+0BBNPVoC1
auYOPZGBX/l7iiwwV0DDuHrdo0cM/Ev97eeNxzlQwTO+q2ph7HiupgKrLnMg
o3+opiiYgY0Nf70Iu82B7CLeRU/fYWBdc5PZsNccKLYxWNbCk4En9tj6b1rk
QMqqxbfH3BhYskS1e/16Evros9ATeJWB5zfLj8XLkVDVJsdXnxwZmCw4S320
l4RWnTdkSJ5mYLGxRLXCIBKqPkM/PmzJwOu8TNYFRJNQ/AnpG18sGNi0f1Pe
yEsS2mL8r+ScKQM7+RkkvCkkIfK+piHtQwwcc3GMc9VvEqqEovXcB9j1bnLy
5WglIXvtaMt0AwYeCRLb0jVNQgx1P98biIGVL6p/KeMgo2XFSy9MdjHwEZnh
scP8ZBQtBaOTWxhYiy9X1FCejMpJ/bd0VRnYbm1WXrkRGUUuVL1cq8TARXur
8OejZGQ9k/+jg8LAZj0mDodPktHcQKhIwEZ2P0ePDR+/REalXZ7bLaQYWG7b
nHuFKxlFtNqcURZn57PS4PrrRUaqVVvSKgQY2GVWrWAwkIxmv8v+il/LwJFq
Y7ltwWT0rWj1pMtqBuau0Th7NYKMQr9MixnwMHBDU29ScjQZnfzUrivKxcCP
wzbfuB5HRsrvy637ORjY9rF9/2ACGU2nf7iTt0TH7aHdPQvJZIST49IfzNPx
2CcdrzdpZBQcH/j7NJOOG/QWXi9nkNGJJy7TmtN0vOI+EvzvLRlRI6wkyRN0
LNhYoXLrPRmNP9ijVztKxzMdjk8ys8joyx0N25QhOi7Ojpm49ZGM7v8nEeTZ
T8eP09WOTuSQkYUX+c2BHjp+8mSkmZRLRvLXRv5s+EvHJ1bFZX5g4zGn+tmx
Njp+qdy/wJlHRvn2WLqwmY6PldgMzrDXA63T0aMGOj7SHPAqiI2PWkWeP19L
xx/V4l0KPpGRjLnv/a1/2PmSazzC2flGDl18x1dJxyhCnMXD5pNreLS25Qcd
R+XJ68iy+Qbs3jn3poyOE/dddm7OJCNTXcVNt4rp+FC00tgWdr0bNgsYHC1k
6/OXsbyZrceAxvwF6lc6NsiVHG1IJaNs5Z7g2Xw65rnAu3YjW08/+cr35Z/o
+KJ2SdYqtt4mG3LrY7Pp+KZH2o6Ip2QkJZa04PSejv2jI5e/RZHRBz6PvYIZ
bL2ORHwTYvfXl9PasTuVjq/y/glhsPt/YMno4cdkOpYdO0dj/UdGXeMbmyzj
6Xj7bfpzD7Z/3g7xLKs9pWNdw2eWWmx/efdMyC9H03F9xIuscFsyEm4scUoK
p+Oh4vdbDpmx+62WGBQQSsevVoSe1R4gI6f/biTbP6BjyaMRC7z6bH8qareq
3qHj4a4zL7w12fHcEw5medLxdPblg2HcZKT03efCY3c6TsB4TegCCdVuOO5/
3ZWO4/TvCOwaJyGN4rWfdZ3o+FztBLxvJKEuIR/V4rPs+DrOGpwpJPTQ3mJf
yik6Vo0XYz19QkI78+k2QZZ0XEczZA7dJ6GocwMxxmbseDnJum+dSehA5jG+
un10PLfeua2VQUIfDmkN9KrTcVf3pLXXWw50NnENV7kqOx49Sv97HAfin+mT
SVeiY97zqW3N9zmQfdyz485ydLwv6/m5ffYcSGp4ddmsCB2LDrZ1m0txoNtB
vS95FrVwY1eoydrxZThaFGur8kMLHw2UOnReZhGotT3tZaVaOKkqlPP58ALM
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
gRZy+P5Ky/PIAiTUVD9fW6SFAvvnONQ+LMCorIWQ7282Vr7gctJlEYI+n2Ke
GdBCjA2R2KJ9CVpDl4R9hrWQC55dH7t6GTRt4rWix7TQY54Pa/23LEM9b6fD
72ktxB6i5SBkGSgWtq1AoiNR3ZTLmltW4Ou4Q6GsFB0t3TLCO3ZwIKHi1e07
N9IR33qdXMohDnQ+OmP+hCwdnZRX2Vh9lgPx641qhyvSEUnBkONGAAeyfOCS
QtKmI7LvVTT2g4M9BwoWbdxCRz9+/ckYaeFAHIwPHdu305E+R+mR9BEOlNI4
JeEKdKSAr5hbryWhaYXrD7oO0lHkKoXKpIMktH9OPG3ZhI5Crxx8GmhFQk8r
couljtLRVcVnXRQHEtK/Nr909AQdtez7ohB0h4Qe4psuRXZ0dLpm99+efBLq
erQppOMCHTEOZdb6lZHQlgvEqwVHOvrmUMJTU0NCrWtJ3dpX6SjK5dHnh8Mk
pHoy4FjyTTrS/ZH645w4GVlezRHi8mPrc8f2t4M8GQXdHfhtG0BHD/kllIXV
yag3y/gA5QEdXTj7Xs5wNxmJ/PDl8Q+lowOrGa5VB8hIvzOzuCucjjxcl9xZ
ZmSUwC8KSU/oaKvNNTn582RUKW+4SIqjo8OO4k/kL5PR0javvHPP6ejLQSFr
wo2MaIczPAqT6MhgvfAw04eMrM63acul0FHT2OTbn7fJ6J7P+olbr9j4VKHC
jntklBu++23nazry6/r9S/8hGYl+famckEVH7zr8sWwsGe2pbehdyaGjHpv/
Ns7Ek5HrEN+Ls/l0lJxys+rcCzJK5NhpTXyhI7OO0sv2qWRUJea8UaaQrQ+X
Sig5g4yWaQnNvsV0lO9J/r35LRmpG1RHt5fRUfx/xtUrmWR0ypLrmN5PNp+A
l3rWWWR0/8oWofhKdv80TxIWH8ko787F30t/6EjJwI2rO4eMBp7GBp+uY/vB
OP8bVy4ZiX2oMPrSSEe9EkVZn9l4b/ky98ZWOvKan3vMk0dGbu1axTc66Cjz
TxptgL2eNG3j19rF9k8XBzrNxn9WP9bb2UdHbs6UZ/afyIhDrmzh6SAddUiq
inGx82lunctdGKGjMQHN25uzyejMITWPk+Ns/86af5l/T0bBtqe1P0/RkXlE
ZZrZOzL67PVwXIrJ9tuBPlX0moyGHha+8Z6nI2y+ShOnkZFEypRj8xIdnX2f
/7ImmYwMCxSUd5AY6Ep3YYB3Ahl5VB/vjeFioEAHvrLsp2SUPHAvaY6HgcJn
cp1uR5FRzfLns5ZrGEjAdqtPdxgZkUXHNuStY6AiR62lhvtkpKUm2ywhxEBN
QrFk6wAyOrv7aLSnKANdbslL8LlJRqHHA8wbJRhoV4rKpKoHGQ37D1RGyzCQ
8hZ5nb32ZCQVKxXMlGega6zXbpmnyWh/prHRcUUGmn/yiDfTnIxSWjOLxNQZ
SNyjY9Vltn9rJ7tueWix+ao8GFLdSkacfKJ69doM5K2vIOlLIyPrzV65j3cw
kNLvp4G9omT08GCG+8wuBrL5cMppno+Mvp5rYxzbzUAfxBoHXy6RkHTo7jci
+xnoxzzHlm/dJFTfx5f06BgDrdmzk39DBgmVmt+LyzvBQDnVuWasOBLK+cYb
3XGSgaQDvWZ8QkkoKp4nWM2GgU5yHxHxcSGhYxarPIqcGWhfQqOevRYJ7SkO
cBm8ykCduS3592VISIfBdWm9OwMt9zx5bLWOhETWcVqf9GGgcRz8aXmIA9WW
cByYustAYo7CRQ4JHKhY+9YeyQcMZM/sUp8P5kDZiSt6EMpALJtDJF0vDhR5
c1n7QSQDvVAVyqoy5UBmmxc3UhIZSGuLx5tC1gpUJzMnjuYzUMXz0f77D5bh
m9D1Ec8v7Ph7FIaunlyGD7dm++IxA+nU0oprVJch4tRMy1Apuz5przvry5fg
iMhUye0aBlLoP3rl2eIiVPmPxXwYYSDPZ7KlzYcXoNKmd7eQjDYyKrbmtn/L
hL9cqazH8tpof9/Aw0+OTJhOufhOUlEbTW9Wuv1FkQmSw8Mb5NS10UBWOGXm
2SzYXZtkaupqoydHNx3wvjcD8/4rbw4d10YPI9a1KJyYAsWXklL3Hmojg/uD
Oebto7DdsKWK/5E2cspfuVp/dBSMB+PuhkVpIwW3Eum8shG4qi47E/1MG1Eu
SEoXfhiGgo+KVSkZ2qjmgNK+/NBBOFqqHVhcpo30R0N1tpzvhfMXZ3bu/6mN
nuVnunh39/xv9hVc2z+fPmfsEG2u/2BO0hP7uX5WiZevGjs0fn0wc1byY/sX
1xxsHj0Gyme82elV+ND+VwXT59Tnxg4+SUfFg74/sOeVPrLy5Stjhzbdfe+L
6h7YG8W7i3/8aOxgrxqcYK1w396VkfNcyVdjhy5tybZs03v2EYtPtfz4YezA
/+KAO7vvXfss1x7rmj/GDvpPdtfKpN+xh57P4AA7nwEAk3vWQw==
       "]]},
     Annotation[#, "Charting`Private`Tag$28822#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Drztx8H/AUzBBPA=
       "]]},
     Annotation[#, "Charting`Private`Tag$28822#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    PointBox[
     NCache[{
       Im[
        ZetaZero[1]], 0}, {14.134725141734695`, 0}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{722.5, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {-1.4602786502261351`, 2.340346500102268}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.928932539230464*^9, 3.9289325469218407`*^9}, {
  3.928932618139813*^9, 3.9289326223677187`*^9}, {3.928932655426022*^9, 
  3.928932697898239*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"aeddc889-bc55-4a1b-a894-62e5d8494066"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["n", "x"]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928933976866378*^9, 3.928934018520031*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"a41d304e-4375-414e-bb63-a5ed4a509412"],

Cell[BoxData[
 RowBox[{"Zeta", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.928933985032271*^9, 3.928934018824296*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"c2532744-f1c2-4055-9dfa-f4a9e10b7bdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Zeta", "@", "x"}], ",", 
   RowBox[{"x", "->", "1"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromAbove\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289340421264057`*^9, 3.9289340739270477`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"46a3c6c3-1e56-4220-8553-5327f5837caf"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{{3.9289340471191473`*^9, 3.9289340744666157`*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"59def1e7-6c4c-4216-a8df-ad19ac1125bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["2", 
   RowBox[{"1", "+", 
    RowBox[{"2", "\[ImaginaryI]"}]}]]]], "Input",
 CellChangeTimes->{{3.928934203578907*^9, 3.928934211468051*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"6517f891-888d-4d5f-9365-56d36719d3da"],

Cell[BoxData[
 SuperscriptBox["2", 
  RowBox[{
   RowBox[{"-", "1"}], "-", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{3.9289342118463507`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"f5215657-5f71-4d4f-8439-6cc89437e17f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Point", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "@", 
           RowBox[{"f", "[", "t", "]"}]}], ",", 
          RowBox[{"Im", "@", 
           RowBox[{"f", "[", "t", "]"}]}]}], "}"}], "/.", 
        RowBox[{"t", "->", "te"}]}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "True"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"te", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.928934718020093*^9, 3.928934863490121*^9}, {
  3.928934896751401*^9, 3.928934939846681*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"bbbc11ee-b34b-4891-be3b-ecb6c4af4b3f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`te$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`te$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {179., 183.625}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`te$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         Point[
          ReplaceAll[{
            Re[
             $CellContext`f[$CellContext`t]], 
            Im[
             $CellContext`f[$CellContext`t]]}, $CellContext`t -> \
$CellContext`te$$]]}, GridLines -> Automatic, PlotRange -> {{-2, 2}, {-2, 2}},
         Frame -> True], "Specifications" :> {{$CellContext`te$$, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {223.13671875, 228.86328125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.928934787081067*^9, {3.928934839060935*^9, 3.9289348698730183`*^9}, {
   3.928934916387554*^9, 3.928934940205595*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"90184502-433e-490c-a778-0e6ec0e80105"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", "\[ImaginaryI]"], "//", "N"}]], "Input",
 CellChangeTimes->{{3.9289350843409567`*^9, 3.9289350887407923`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"a92051c7-c146-46f7-85d7-9b2547e80de3"],

Cell[BoxData[
 RowBox[{"0.7692389013639721`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.6389612763136348`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.9289350864991817`*^9, 3.92893508876797*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"6917c371-2834-462e-9e2e-29654a39d9bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[Pi]", "/", "2"}]], "//", "N"}]], "Input",
 CellChangeTimes->{{3.928935176909319*^9, 3.928935184885091*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"e86db1c9-efa7-4a72-a546-500fb016af33"],

Cell[BoxData["4.810477380965351`"], "Output",
 CellChangeTimes->{{3.928935181028139*^9, 3.928935184967729*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"ea3b0761-3d71-494f-9d93-1428293d7f46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", "2", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.928935247451486*^9, 3.928935252881288*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"2c59dd59-de22-4829-be1b-ed9a4c8b154d"],

Cell[BoxData["0.6931471805599453`"], "Output",
 CellChangeTimes->{3.9289352529309053`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"06ef6279-b445-4e50-9129-06a98c25dcc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"Log", "[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Sin", "[", 
     RowBox[{"Log", "[", "2", "]"}], "]"}]}], "}"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.928935355454979*^9, 3.928935370025391*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"29b3cdfd-d9e9-4061-a69c-513575539618"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7692389013639721`", ",", "0.6389612763136348`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.928935358928567*^9, 3.928935370055024*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"d0a14b9d-2785-4d48-98bb-54405ee37eab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"b", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.9289354902379827`*^9, 3.928935522025628*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"4b77670f-13bb-4cef-b923-546c5d2c07a7"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9289355323026943`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"ed689cad-a782-476d-bb45-34a49ff153c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{{3.928935522634811*^9, 3.92893552581767*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"34e97556-2d75-4688-b398-04bb7d2db57f"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.9289355421942883`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"aa457794-ceb1-4b1a-96ca-8c86369c8795"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["333333333333"], "Input",
 CellChangeTimes->{{3.928935541066513*^9, 3.928935542422702*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c3117c9d-2480-4df5-a23f-91ea203c929f"],

Cell[BoxData["333333333333"], "Output",
 CellChangeTimes->{3.928935542738233*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"8f8fe543-6476-4de0-8b6c-e2502aef584a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"b", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.928935543589566*^9, 3.928935545410014*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"2620621e-ee7a-4f16-a90e-7b7c9e3a6c3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArcTan", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "==", 
    RowBox[{"Arg", "[", 
     RowBox[{"a", "+", 
      RowBox[{"b", " ", "\[ImaginaryI]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289355534597178`*^9, 3.928935598277422*^9}, {
  3.9289356402097282`*^9, 3.928935648852907*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ac971257-9c67-47f0-aaae-ef742fae8d23"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.928935556790642*^9, 3.9289355661915283`*^9}, {
   3.928935596740896*^9, 3.928935605579891*^9}, {3.92893564049931*^9, 
   3.928935656592201*^9}, 3.928935751191166*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"28d8d772-677e-4ccc-8961-ff67380dceb8"]
}, Open  ]],

Cell[BoxData["Arg"], "Input",
 CellChangeTimes->{{3.928935545943132*^9, 
  3.9289355478545523`*^9}},ExpressionUUID->"0bd67144-a950-4b2a-b4f2-\
9d36324f9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Arg", "[", 
  RowBox[{"3", "+", 
   RowBox[{"4", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928935607073764*^9, 3.928935610081253*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"85733cce-f8ec-4b0b-be36-b8a0c9bb17a1"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox["4", "3"], "]"}]], "Output",
 CellChangeTimes->{3.928935610327187*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"93887c16-3ab6-462f-b6ab-7d0c73996163"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{"3", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.928935611817542*^9, 3.928935614405208*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"68492d9f-d0dd-456e-b880-7963121e785c"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox["4", "3"], "]"}]], "Output",
 CellChangeTimes->{3.928935614523314*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5fc3ade7-31da-41ba-9c44-773fdefdee49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArcTan", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "==", 
   RowBox[{"Arg", "[", 
    RowBox[{"a", "+", 
     RowBox[{"b", " ", "\[ImaginaryI]"}]}], "]"}]}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "\[Element]", "Reals"}], "}"}]}]}], 
    "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.928935644725024*^9, 3.928935668204981*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"08e390a2-3dfd-491a-8409-2aea1c388e41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcTan", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
  RowBox[{"Arg", "[", 
   RowBox[{"a", "+", 
    RowBox[{"\[ImaginaryI]", " ", "b"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.9289356466301003`*^9, 3.928935668418825*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"91a38ae3-9ac2-457b-8c87-06f009f1bf3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"Log", "[", "4", "]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"Log", "[", "4", "]"}], "]"}]}]}], ")"}]}], "==", 
  SuperscriptBox["2", 
   RowBox[{"1", "+", 
    RowBox[{"2", "\[ImaginaryI]"}]}]]}]], "Input",
 CellChangeTimes->{{3.928935753707361*^9, 3.928935771582117*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2e1a881b-6579-44af-baeb-86f4adb958a4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.928935759988393*^9, 3.928935771856552*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"6a064a07-3c60-4c05-aef7-16063c48412d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["5", 
     RowBox[{"3", "/", "2"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", "25", "]"}], "+", 
        RowBox[{"3", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], 
      RowBox[{"ArcTan", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}]]}], "==", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9289360599033337`*^9, 3.9289360968283052`*^9}, {
  3.928936845698105*^9, 3.92893685842234*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"31e02d71-a4ef-47d2-b37f-7f88cc0f0721"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.928936850236267*^9, 3.928936858616753*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"59c53c64-7df5-4168-935c-1b9fbc7372c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "//", "N"}]], "Input",
 CellChangeTimes->{{3.928936100105167*^9, 3.928936109157978*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"197db51d-ddaf-423c-9656-fb168fd09089"],

Cell[BoxData[
 RowBox[{"0.129009594074467`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.03392409290517014`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.9289361093211718`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"81ccdd2a-6f6f-40c9-ae69-b0eacf5a9e3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"ArcTan", "[", 
   RowBox[{"1", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.928936604339426*^9, 3.928936606889387*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"99a5a9dc-5c91-4434-a2c4-c49d3344ca46"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.9289366070768337`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"1d3dec1b-618a-489f-acc4-04743f9bbc84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SqrtBox["5"], ")"}], 
     RowBox[{"3", "+", 
      RowBox[{"4", "\[ImaginaryI]"}]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "3", "a"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "4"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "-", "b"}], "//", 
  "N"}]}], "Input",
 CellChangeTimes->{{3.9289366144206953`*^9, 3.928936792047154*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"dd0ed164-2d79-4e8f-80fe-2e73ababecae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.06903290420590716`"}], "-", 
  RowBox[{"0.018152748038592494`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.928936666903504*^9, 3.928936674876588*^9}, {
  3.928936740570162*^9, 3.928936744980822*^9}, {3.928936785487646*^9, 
  3.928936792076309*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"cdd96ed3-b2e2-490f-bfa1-4e261ff93fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionExpand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "]"}]], "Input",
 CellChangeTimes->{{3.928936864188699*^9, 3.928936873011167*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"60b39c14-a6e0-4c2d-865e-3ec3a96ceca9"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
  RowBox[{"3", "+", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{3.928936873242491*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ca488e80-d10c-4d8d-90de-f95f9000a3ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "]"}]], "Input",
 CellChangeTimes->{{3.928936876419879*^9, 3.928936887108412*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"0b46f591-5734-42c0-8948-d75d5583c248"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
  RowBox[{"3", "+", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{3.928936887313106*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"abb24f80-c906-4f75-91b6-20adf86eb8aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "]"}]], "Input",
 CellChangeTimes->{{3.928936889638254*^9, 3.928936891202505*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"7f37741e-232a-401c-9ce0-c10a2cdda54f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", " ", 
    SqrtBox["5"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"ArcTan", "[", "2", "]"}]}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "5", "]"}]}]}], "]"}]}], "+", 
   RowBox[{"5", " ", "\[ImaginaryI]", " ", 
    SqrtBox["5"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"ArcTan", "[", "2", "]"}]}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "5", "]"}]}]}], "]"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.92893690533471*^9, 3.928936906270837*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"b3da3481-20f7-4e82-a05c-a468d1e1043e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "11"}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["5", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"ArcTan", "[", "2", "]"}]}]]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.928936909719832*^9, 3.9289369097227097`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"f8a520b7-f725-4132-a518-781593f96968"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "11"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  SuperscriptBox["5", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    RowBox[{"ArcTan", "[", "2", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.928936909971977*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"4941a467-cf18-4c55-a73d-971251e49207"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"3", "+", 
    RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.928936900892362*^9, 3.9289369018050537`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"973aa6ea-68c5-465d-bdd6-908f6e64ff66"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
  RowBox[{"3", "+", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{3.92893690200275*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"6b49ea34-4503-4a67-86da-145d8061c0ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(1+2i)^I", "WolframAlphaLong",
 CellChangeTimes->{{3.928936953085004*^9, 3.9289369572860928`*^9}, {
  3.928937502357521*^9, 3.928937530153911*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"615efd82-1364-45cc-845b-3bac4c8462d1"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "(1+2i)^I", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"(1 + 2 I)^I"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
              "\[ImaginaryI]"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "i is the imaginary unit"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/I.html", "text" -> 
           "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/i.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Decimal approximation", "scanner" -> "Numeric", "id" -> 
     "DecimalApproximation", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[(1 + 2 I)^I, 79]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"0.22914018598043381823859305953369730350129548972451835\
8505300124\[Ellipsis] +\"", LineIndent -> 0.54, StripOnInput -> False]}, {
                    StyleBox[
                    "\"0.23817011512167551357952396208127525096590635172757090\
3238380692\[Ellipsis] \[ImaginaryI]\"", LineIndent -> 0.54, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 1, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.3}}}], 
                   "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"using the principal branch of the logarithm for \
complex exponentiation\"", "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Property", "scanner" -> "Numeric", "id" -> "Property", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Element[(1 + 2 I)^I, Algebraics]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               SuperscriptBox[
                RowBox[{"(", 
                  TagBox[
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]"}]}], HoldForm], ")"}], 
                TagBox["\[ImaginaryI]", HoldForm]], HoldForm], 
              "\" is a transcendental number\""}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate complex forms", "scanner" -> "Numeric", "id" -> 
     "PolarForms", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Re[(1 + 2 I)^I] + Im[(1 + 2 I)^I] I"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              RowBox[{"0.2291401859804338182`4.991444837866174", "+", 
                
                RowBox[{
                 "0.2381701151216755136`5.008230843200483", " ", 
                  "\[ImaginaryI]"}]}], HoldForm], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}], 
       
       XMLElement["states", {"count" -> "2"}, {
         XMLElement[
         "state", {
          "name" -> "More digits", "input" -> 
           "PolarForms__1_More digits"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Exact form", "input" -> 
           "PolarForms__1_Exact form"}, {}]}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"(Cos[0.804719] + I Sin[0.804719])/E^ArcTan[2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    
                    TemplateBox[{"cos"}, "InactiveHead", BaseStyle -> 
                    "InactiveTraditional", Tooltip -> "Inactive[Cos]", 
                    SyntaxForm -> "Symbol", InterpretationFunction -> None], 
                    "(", "0.8047189562170503`", ")"}], 
                  TagBox[
                  "+", "InactiveToken", BaseStyle -> "InactiveTraditional", 
                   SyntaxForm -> "+"], 
                  RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{
                    
                    TemplateBox[{"sin"}, "InactiveHead", BaseStyle -> 
                    "InactiveTraditional", Tooltip -> "Inactive[Sin]", 
                    SyntaxForm -> "Symbol", InterpretationFunction -> None], 
                    "(", "0.8047189562170503`", ")"}]}]}], ")"}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}], 
       XMLElement["states", {"count" -> "2"}, {
         XMLElement[
         "statelist", {
          "count" -> "2", "value" -> "Radians", "delimiters" -> ""}, {
           XMLElement[
           "state", {
            "name" -> "Radians", "input" -> "PolarForms__2_Radians"}, {}], 
           XMLElement[
           "state", {
            "name" -> "Degrees", "input" -> "PolarForms__2_Degrees"}, {}]}], 
         XMLElement[
         "state", {
          "name" -> "Approximate forms", "input" -> 
           "PolarForms__2_Approximate forms"}, {}]}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"E^(0.804719 I)/E^ArcTan[2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               TagBox[
                RowBox[{"0.8047189562170503`", " ", "\[ImaginaryI]"}], 
                HoldForm]], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}], 
       XMLElement["states", {"count" -> "1"}, {
         XMLElement[
         "state", {
          "name" -> "Approximate form", "input" -> 
           "PolarForms__3_Approximate form"}, {}]}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "tan^(-1)(x) is the inverse tangent function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/ArcTan.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/ArcTan", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/InverseTangent.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Position in the complex plane", "scanner" -> "Numeric",
      "id" -> "PositionInTheComplexPlane", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsoluteThickness[1], 
               
               LineBox[{{{0, 0}, {0.2291401859804338, 
                  0.23817011512167555`}}}]}, {
               RGBColor[1, 0, 0], 
               PointSize[Medium], 
               PointBox[{{0.2291401859804338, 0.23817011512167555`}}]}}, 
             ImageSize -> 220., Method -> {"AxesInFront" -> False}, 
             FrameTicks -> Automatic, PlotRange -> 0.36354996433440373`, 
             Frame -> True, FrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1], Axes -> True, AxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1], AxesLabel -> {
               FormBox[
                StyleBox["\"Re\"", {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], TraditionalForm], 
               FormBox[
                StyleBox["\"Im\"", {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], TraditionalForm]}, PlotRangePadding -> 
             Scaled[0.1], TicksStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Polar coordinates", "scanner" -> "Numeric", "id" -> 
     "PolarCoordinates", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"{Norm[(1 + 2 I)^I], Arg[(1 + 2 I)^I]}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{"r", "\[LongEqual]", 
                TagBox[
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], Identity]}], 
              TemplateBox[{5}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"radius\"", "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], "\",\"", 
              TemplateBox[{15}, "Spacer1"], 
              RowBox[{"\[Theta]", "\[LongEqual]", 
                TagBox["0.8047189562170503`", Identity]}], 
              TemplateBox[{5}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"angle\"", "\[NoBreak]", "\")\""}], {
               
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1\
, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}], 
       XMLElement["states", {"count" -> "2"}, {
         XMLElement[
         "statelist", {
          "count" -> "2", "value" -> "Radians", "delimiters" -> ""}, {
           XMLElement[
           "state", {
            "name" -> "Radians", "input" -> 
             "PolarCoordinates__1_Radians"}, {}], 
           XMLElement[
           "state", {
            "name" -> "Degrees", "input" -> 
             "PolarCoordinates__1_Degrees"}, {}]}], 
         XMLElement[
         "state", {
          "name" -> "Approximate forms", "input" -> 
           "PolarCoordinates__1_Approximate forms"}, {}]}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ComplexExpand[(1 + 2 I)^I]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], " ", 
                 RowBox[{"cos", "(", 
                   FractionBox[
                    RowBox[{"log", "(", "5", ")"}], "2"], ")"}]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], " ", 
                 RowBox[{"sin", "(", 
                   FractionBox[
                    RowBox[{"log", "(", "5", ")"}], "2"], ")"}]}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    
                    TemplateBox[{
                    "\"[\"", 
                    "\"0; 2 - 2\[ImaginaryI], 2 + 4\[ImaginaryI], 2 - 2\
\[ImaginaryI], -1 - 2\[ImaginaryI], 1 - 3\[ImaginaryI], -3, 1 + \
\[ImaginaryI], 2 - \[ImaginaryI], -2 - 2\[ImaginaryI], -2,\"", 
                    "\" \[Ellipsis]]\""}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {"Columns" -> {{
                    Scaled[1.003]}}}], "Column"]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"using the Hurwitz expansion\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontSize -> 10, FontFamily -> "Roboto", 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> 
         "ContinuedFraction__More terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Multivalued result", "scanner" -> "Numeric", "id" -> 
     "NonPrincipalExponentiation", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> "General form"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                TemplateBox[{
                  RowBox[{
                    TagBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
                    "\[ImaginaryI]"], HoldForm], "\[LongEqual]", 
                    SuperscriptBox[
                    TagBox["\[ExponentialE]", HoldForm], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"2"}], " ", "\[Pi]", " ", "n"}]}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", "5", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]]}], 
                  StyleBox["\" for \"", {
                    GrayLevel[0.6], LineIndent -> 0}], 
                  RowBox[{"n", "\[Element]", 
                    TemplateBox[{}, "Integers"]}]}, "RowDefault"], "\"  \"", 
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   
                   TemplateBox[{
                    "\"the choice of \"", "n", 
                    "\" is determined by the branch of the logarithm used for \
complex exponentiation\""}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                 FontSize -> 10, FontFamily -> "Roboto", 
                  GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Values"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "n", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 RowBox[{"-", "2"}], 
                 RowBox[{"-", "1"}], "0", "1", "2"}, {
                 TagBox[
                  PaneBox[
                  "\"value\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 SuperscriptBox[
                  TagBox["\[ExponentialE]", HoldForm], 
                  RowBox[{
                    RowBox[{"4", " ", "\[Pi]"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", "5", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], 
                 SuperscriptBox[
                  TagBox["\[ExponentialE]", HoldForm], 
                  RowBox[{
                    RowBox[{"2", " ", "\[Pi]"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", "5", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], 
                 SuperscriptBox[
                  TagBox["\[ExponentialE]", HoldForm], 
                  RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", "5", ")"}]}]}]], 
                 SuperscriptBox[
                  TagBox["\[ExponentialE]", HoldForm], 
                  RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"2"}], " ", "\[Pi]"}]}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", "5", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]], 
                 SuperscriptBox[
                  TagBox["\[ExponentialE]", HoldForm], 
                  RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"4"}], " ", "\[Pi]"}]}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", "5", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "2", ")"}]}]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Left, Left, Left}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "NonPrincipalExponentiation__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Approximate forms", "input" -> 
         "NonPrincipalExponentiation__Approximate forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> 
         "NonPrincipalExponentiation__Show details"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "Z is the set of integers"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Integers.html", 
           "text" -> "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Z.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "I", "word" -> "i", "template" -> 
        "Assuming i is the imaginary unit${separator}Use i as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "\"i\" -> \"ImaginaryI\""}, {
        XMLElement[
        "value", {
         "name" -> "ImaginaryI", "desc" -> "the imaginary unit", "input" -> 
          "\"i\" -> \"ImaginaryI\""}, {}], 
        XMLElement[
        "value", {
         "name" -> "Variable", "desc" -> "a variable", "input" -> 
          "\"i\" -> \"Variable\""}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "9", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.033", "parsetiming" -> "0.232", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP448618h2798g5ii2e34h00004584fh91833d75ba", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa448718h2798g5ii2e34h00000fe28g1di8b40fe24222294402565530544", "version" -> 
    "2.6", "inputstring" -> "(1+2i)^I"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., "Date" -> {2024, 7, 3, 3, 32, 13.253927`7.874919559868}, 
    "Line" -> 79, "SessionID" -> 27244732209235104583}, Typeset`showpods$$ = {
   1, 2, 3, 4, 5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "(1+2i)^I"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1213., {599.3515625, 604.6484375}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.928937533281087*^9},ExpressionUUID->"e74d954e-13a3-429d-a13e-\
8a8819cba4b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", 
  RowBox[{"2", "+", 
   RowBox[{"3", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928936978766683*^9, 3.928936982851687*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"432987dd-3890-41d1-a7b9-2dedb85a3f8a"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"3", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.9289369808491983`*^9, 3.9289369831332006`*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"84691bd4-6393-4e02-b193-35b5d5a59998"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  RowBox[{"2", "+", 
   RowBox[{"3", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928937004302891*^9, 3.928937029160604*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"4a3752cd-a50b-4aa3-892b-e55348778345"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"3", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.928937029447528*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"0c0ad58c-11f0-4781-a2b8-bdcbbe200b41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "]"}]], "Input",
 CellChangeTimes->{{3.928937031683752*^9, 3.928937052301915*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"d677c6ed-513f-4f43-acfe-4277ef1cff9e"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
  RowBox[{"3", "+", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{{3.928937037432063*^9, 3.9289370525481052`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"ecfca8da-3fee-440c-ad54-4844567c36f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "]"}]], "Input",
 CellChangeTimes->{{3.9289370533963614`*^9, 3.928937054634194*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"95572dba-d7be-4826-a661-f0fa8efac281"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
  RowBox[{"3", "+", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{3.928937054881053*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"15a523fd-565e-4f52-ba03-025ecdf09660"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}], ")"}]], "]"}]], "Input",
 CellChangeTimes->{{3.9289370553719893`*^9, 3.9289370567522917`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"545a88d9-2e0c-4e05-b18f-0a8496754ef7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cosh", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], "]"}]}], "]"}], "+", 
   RowBox[{"Sinh", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], "]"}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.928937066709134*^9, 3.928937067732024*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"f3e07cdc-70c7-458b-bef6-5451be065623"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "11"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{"4", " ", "\[ImaginaryI]"}]]}], "==", 
   RowBox[{
    RowBox[{"5", " ", 
     SqrtBox["5"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"ArcTan", "[", "2", "]"}]}]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "5", "]"}]}]}], "]"}]}], "+", 
    RowBox[{"5", " ", "\[ImaginaryI]", " ", 
     SqrtBox["5"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"ArcTan", "[", "2", "]"}]}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "5", "]"}]}]}], "]"}]}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.928937093860241*^9, 3.9289370952570868`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"4ffc5312-2e1d-4609-92e5-80a99f0c85dc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.928937095545491*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"792abd00-7ee7-4c4e-b6be-def818667be0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"a", "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"log", "(", 
        SqrtBox["5"], ")"}]}], "-", 
      RowBox[{"4", " ", "a"}]}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "a"}], "+", 
        RowBox[{"log", "(", "25", ")"}]}], ")"}]}]]}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.928937231628112*^9, 3.9289372338276854`*^9}, {
  3.928937264297359*^9, 3.928937298527584*^9}, {3.928937332414048*^9, 
  3.9289373805440683`*^9}, {3.928937422523377*^9, 3.92893742614857*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"6053c7e2-1a6d-4e1d-8a13-52e3c8147b63"],

Cell[BoxData[
 RowBox[{"5", " ", 
  SqrtBox["5"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
       RowBox[{"Log", "[", "25", "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.928937267217214*^9, 3.928937345106008*^9}, 
   3.928937426345985*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"0f1478d7-601e-47d7-8caf-19f3e4ec8bc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.928937426635063*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"29d6a39b-a6c1-42c0-a289-0d65be7ecdde"],

Cell[BoxData[
 RowBox[{"5", " ", 
  SqrtBox["5"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
       RowBox[{"Log", "[", "25", "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.928937426796476*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d8845390-18fb-44c0-964f-a727e3964fd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"log", "(", 
        SqrtBox["5"], ")"}]}], "-", 
      RowBox[{"4", " ", "a"}]}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "a"}], "+", 
        RowBox[{"log", "(", "25", ")"}]}], ")"}]}]]}], "//", "FullSimplify"}],
   TraditionalForm]], "Input",
 CellChangeTimes->{{3.928937389699353*^9, 3.928937394833396*^9}},
 CellLabel->"",ExpressionUUID->"7fbdcba8-4b09-47ab-8665-11537fa727b9"],

Cell[BoxData[
 RowBox[{"5", " ", 
  SqrtBox["5"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
       RowBox[{"Log", "[", "25", "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.928937383008996*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"a9e59948-bfce-4440-b68c-f58df3abdd51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TrigToExp", "[", "a", "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9289374290973682`*^9, 3.9289374375938377`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"bf694d32-6591-4588-8831-1e38500e28d6"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "25"]}], "-", 
    FractionBox[
     RowBox[{"4", " ", "\[ImaginaryI]"}], "25"]}], ")"}], 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], "-", 
   RowBox[{"2", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{{3.928937431143929*^9, 3.9289374377925863`*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"a7d17f27-450f-4e7e-9e37-dc51d2e78c01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpToTrig", "[", "a", "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9289374319218187`*^9, 3.928937440058978*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"d838aec6-df7d-4f8f-bf87-fb10fc2bd80c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "11"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "-", 
     RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]], " ", 
  SuperscriptBox["5", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]]}]], "Output",
 CellChangeTimes->{{3.928937433180484*^9, 3.928937440255878*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"2e98659c-77e3-42b9-84a2-d8ea3faed3fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{"3", "+", 
      RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "==", 
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "t"}], "}"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", "t"}], "}"}], "\[Element]", "Reals"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.928937552142934*^9, 3.9289375895031967`*^9}, {
  3.928937622601075*^9, 3.928937684973517*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"2a4ff386-1199-4dd5-a865-2da7f7154528"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
           RowBox[{"3", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]"}]}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", "2"}], " ", 
                   RowBox[{"ArcTan", "[", 
                    RowBox[{
                    RowBox[{"Cot", "[", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox[
                    RowBox[{"Cot", "[", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
                    "]"}]}], "+", 
                 RowBox[{"2", " ", "\[Pi]", " ", 
                   TemplateBox[{"1"}, "C"]}]}], ")"}]}]]}], 
        RowBox[{
          TemplateBox[{"1"}, "C"], "\[Element]", 
          TemplateBox[{}, "Integers"]}]},
       "ConditionalExpression"]}], ",", 
     RowBox[{"t", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"ArcTan", "[", 
              RowBox[{
                RowBox[{"Cot", "[", 
                  RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
                SqrtBox[
                 RowBox[{"1", "+", 
                   SuperscriptBox[
                    RowBox[{"Cot", "[", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
              "]"}]}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            TemplateBox[{"1"}, "C"]}]}], 
        RowBox[{
          TemplateBox[{"1"}, "C"], "\[Element]", 
          TemplateBox[{}, "Integers"]}]},
       "ConditionalExpression"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
           RowBox[{"3", "+", 
             RowBox[{"4", " ", "\[ImaginaryI]"}]}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", "2"}], " ", 
                   RowBox[{"ArcTan", "[", 
                    RowBox[{
                    RowBox[{"Cot", "[", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox[
                    RowBox[{"Cot", "[", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
                    "]"}]}], "+", 
                 RowBox[{"2", " ", "\[Pi]", " ", 
                   TemplateBox[{"1"}, "C"]}]}], ")"}]}]]}], 
        RowBox[{
          TemplateBox[{"1"}, "C"], "\[Element]", 
          TemplateBox[{}, "Integers"]}]},
       "ConditionalExpression"]}], ",", 
     RowBox[{"t", "\[Rule]", 
      TemplateBox[{
        RowBox[{
          RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"ArcTan", "[", 
              RowBox[{
                RowBox[{"Cot", "[", 
                  RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                   SuperscriptBox[
                    RowBox[{"Cot", "[", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
              "]"}]}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            TemplateBox[{"1"}, "C"]}]}], 
        RowBox[{
          TemplateBox[{"1"}, "C"], "\[Element]", 
          TemplateBox[{}, "Integers"]}]},
       "ConditionalExpression"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.928937564779441*^9, 3.928937589736292*^9}, {
  3.9289376269148483`*^9, 3.9289376851956367`*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"542b3c3c-125b-4f73-820c-c1dcefd82e63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{"3", "+", 
      RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "==", 
    RowBox[{"r", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "t"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928937745980837*^9, 3.928937757822216*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"bc071d0f-1aab-4387-98a3-ea2aa0a60bbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["171", "10"], "-", 
      FractionBox[
       RowBox[{"103", " ", "\[ImaginaryI]"}], "5"]}]}], ",", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "150"}], " ", "\[Pi]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["14690", "71677"]}], "-", 
           FractionBox[
            RowBox[{"26080", " ", "\[ImaginaryI]"}], "71677"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
          RowBox[{"4", " ", "\[ImaginaryI]"}]]}], "]"}]}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.928937747931569*^9, 3.928937758061166*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"73dc7f05-3142-4e5f-8801-eb33c39b3ea7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
    RowBox[{"3", "+", 
     RowBox[{"4", " ", "\[ImaginaryI]"}]}]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"Cot", "[", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], "]"}]}],
        "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        TemplateBox[{"1"},
         "C"]}]}], ")"}]}]]}], "/.", 
  RowBox[{
   TemplateBox[{"1"},
    "C"], "->", "1"}]}]], "Input",
 CellChangeTimes->{{3.928937792621051*^9, 3.928937803641932*^9}, {
  3.9289379241804247`*^9, 3.928937929442078*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"ee0b4aaf-a811-4f61-a9ff-a481b002e593"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
   RowBox[{"3", "+", 
    RowBox[{"4", " ", "\[ImaginaryI]"}]}]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "\[Pi]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Cot", "[", 
             RowBox[{
              RowBox[{"3", " ", 
               RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
        "]"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.9289377944119177`*^9, 3.9289378038733387`*^9}, {
  3.928937925130052*^9, 3.928937929675254*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"418123b1-25ae-47b1-8476-04d4aa75a677"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], "]"}]}], 
   "+", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    TemplateBox[{"1"},
     "C"]}]}], "/.", 
  RowBox[{
   TemplateBox[{"1"},
    "C"], "->", "1"}]}]], "Input",
 CellChangeTimes->{3.928937828014359*^9, 3.9289379465727253`*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"ceea3854-e779-4e3a-b6f6-448026e87e1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "\[Pi]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"Cot", "[", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{3.928937828328665*^9, 3.928937946789835*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"ee1c0251-4737-448d-bb19-a13d18dab111"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{"3", "+", 
      RowBox[{"4", " ", "\[ImaginaryI]"}]}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"Cot", "[", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox[
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"3", " ", 
                 RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
          "]"}]}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"},
          "C"]}]}], ")"}]}]]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "1"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{3.9289378590661087`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"898c3d15-283c-4a2b-b597-5edbee5b87b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
    RowBox[{"4", " ", "\[ImaginaryI]"}]]}], " ", 
  SuperscriptBox["5", 
   RowBox[{
    FractionBox["3", "2"], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]]}]], "Output",
 CellChangeTimes->{3.928937859369423*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"873d22a8-9ae8-4b13-a987-b4e2b631b7d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"Cot", "[", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], "]"}]}], 
    "+", 
    RowBox[{"2", " ", "\[Pi]", " ", 
     TemplateBox[{"1"},
      "C"]}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9289378668620367`*^9, 3.928937875211478*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"94534c0a-2b75-4285-b062-0a2efa6443c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "3"}], " ", "\[Pi]"}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
  RowBox[{"Log", "[", "25", "]"}]}]], "Output",
 CellChangeTimes->{{3.92893786834268*^9, 3.9289378754464817`*^9}},
 CellLabel->
  "Out[107]=",ExpressionUUID->"03966bc7-2531-4c2f-8f4c-09acd14c5378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
    RowBox[{"3", "+", 
     RowBox[{"4", " ", "\[ImaginaryI]"}]}]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"Cot", "[", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
         "]"}]}]}], ")"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"Cot", "[", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{"ArcTan", "[", "2", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", "5", "]"}]}]}], "]"}], "2"]}]]}], 
         "]"}]}]}], ")"}]}]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.928937888366469*^9, 3.928937954284525*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"310fa95c-3b75-4e7f-882f-f837683e4511"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
  RowBox[{"3", "+", 
   RowBox[{"4", " ", "\[ImaginaryI]"}]}]]], "Output",
 CellChangeTimes->{{3.928937902523731*^9, 3.928937909396946*^9}, 
   3.928937954861205*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"00fd15c9-b497-45d7-b7a1-5b3dfbe82e37"]
}, Open  ]]
},
WindowSize->{1280., 689.5},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Linux x86 (64-bit) (December 7, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"577397b7-7894-442c-b7e0-1e8730194bcc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1150, 31, 158, "Input",ExpressionUUID->"00b39efb-f019-4b3c-8f93-1225d904a89c"],
Cell[1733, 55, 48188, 815, 463, "Output",ExpressionUUID->"aeddc889-bc55-4a1b-a894-62e5d8494066"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49958, 875, 338, 8, 45, "Input",ExpressionUUID->"a41d304e-4375-414e-bb63-a5ed4a509412"],
Cell[50299, 885, 203, 3, 34, "Output",ExpressionUUID->"c2532744-f1c2-4055-9dfa-f4a9e10b7bdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50539, 893, 341, 7, 30, "Input",ExpressionUUID->"46a3c6c3-1e56-4220-8553-5327f5837caf"],
Cell[50883, 902, 187, 2, 34, "Output",ExpressionUUID->"59def1e7-6c4c-4216-a8df-ad19ac1125bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51107, 909, 272, 6, 49, "Input",ExpressionUUID->"6517f891-888d-4d5f-9365-56d36719d3da"],
Cell[51382, 917, 252, 6, 36, "Output",ExpressionUUID->"f5215657-5f71-4d4f-8439-6cc89437e17f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51671, 928, 1457, 39, 166, "Input",ExpressionUUID->"bbbc11ee-b34b-4891-be3b-ecb6c4af4b3f"],
Cell[53131, 969, 1942, 41, 471, "Output",ExpressionUUID->"90184502-433e-490c-a778-0e6ec0e80105"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55110, 1015, 235, 4, 30, "Input",ExpressionUUID->"a92051c7-c146-46f7-85d7-9b2547e80de3"],
Cell[55348, 1021, 287, 4, 34, "Output",ExpressionUUID->"6917c371-2834-462e-9e2e-29654a39d9bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55672, 1030, 261, 5, 30, "Input",ExpressionUUID->"e86db1c9-efa7-4a72-a546-500fb016af33"],
Cell[55936, 1037, 190, 2, 34, "Output",ExpressionUUID->"ea3b0761-3d71-494f-9d93-1428293d7f46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56163, 1044, 225, 4, 30, "Input",ExpressionUUID->"2c59dd59-de22-4829-be1b-ed9a4c8b154d"],
Cell[56391, 1050, 169, 2, 34, "Output",ExpressionUUID->"06ef6279-b445-4e50-9129-06a98c25dcc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56597, 1057, 395, 9, 52, "Input",ExpressionUUID->"29b3cdfd-d9e9-4061-a69c-513575539618"],
Cell[56995, 1068, 257, 5, 34, "Output",ExpressionUUID->"d0a14b9d-2785-4d48-98bb-54405ee37eab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57289, 1078, 229, 4, 30, "Input",ExpressionUUID->"4b77670f-13bb-4cef-b923-546c5d2c07a7"],
Cell[57521, 1084, 158, 2, 34, "Output",ExpressionUUID->"ed689cad-a782-476d-bb45-34a49ff153c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57716, 1091, 170, 2, 30, "Input",ExpressionUUID->"34e97556-2d75-4688-b398-04bb7d2db57f"],
Cell[57889, 1095, 150, 2, 34, "Output",ExpressionUUID->"aa457794-ceb1-4b1a-96ca-8c86369c8795"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58076, 1102, 182, 2, 30, "Input",ExpressionUUID->"c3117c9d-2480-4df5-a23f-91ea203c929f"],
Cell[58261, 1106, 159, 2, 34, "Output",ExpressionUUID->"8f8fe543-6476-4de0-8b6c-e2502aef584a"]
}, Open  ]],
Cell[58435, 1111, 226, 4, 30, "Input",ExpressionUUID->"2620621e-ee7a-4f16-a90e-7b7c9e3a6c3b"],
Cell[CellGroupData[{
Cell[58686, 1119, 512, 13, 32, "Input",ExpressionUUID->"ac971257-9c67-47f0-aaae-ef742fae8d23"],
Cell[59201, 1134, 303, 4, 34, "Output",ExpressionUUID->"28d8d772-677e-4ccc-8961-ff67380dceb8"]
}, Open  ]],
Cell[59519, 1141, 157, 3, 30, "Input",ExpressionUUID->"0bd67144-a950-4b2a-b4f2-9d36324f9fa5"],
Cell[CellGroupData[{
Cell[59701, 1148, 255, 5, 32, "Input",ExpressionUUID->"85733cce-f8ec-4b0b-be36-b8a0c9bb17a1"],
Cell[59959, 1155, 202, 4, 49, "Output",ExpressionUUID->"93887c16-3ab6-462f-b6ab-7d0c73996163"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60198, 1164, 227, 4, 30, "Input",ExpressionUUID->"68492d9f-d0dd-456e-b880-7963121e785c"],
Cell[60428, 1170, 202, 4, 49, "Output",ExpressionUUID->"5fc3ade7-31da-41ba-9c44-773fdefdee49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60667, 1179, 624, 18, 32, "Input",ExpressionUUID->"08e390a2-3dfd-491a-8409-2aea1c388e41"],
Cell[61294, 1199, 352, 8, 35, "Output",ExpressionUUID->"91a38ae3-9ac2-457b-8c87-06f009f1bf3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61683, 1212, 516, 14, 35, "Input",ExpressionUUID->"2e1a881b-6579-44af-baeb-86f4adb958a4"],
Cell[62202, 1228, 176, 2, 34, "Output",ExpressionUUID->"6a064a07-3c60-4c05-aef7-16063c48412d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62415, 1235, 964, 29, 35, "Input",ExpressionUUID->"31e02d71-a4ef-47d2-b37f-7f88cc0f0721"],
Cell[63382, 1266, 176, 2, 34, "Output",ExpressionUUID->"59c53c64-7df5-4168-935c-1b9fbc7372c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63595, 1273, 383, 10, 35, "Input",ExpressionUUID->"197db51d-ddaf-423c-9656-fb168fd09089"],
Cell[63981, 1285, 264, 4, 34, "Output",ExpressionUUID->"81ccdd2a-6f6f-40c9-ae69-b0eacf5a9e3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64282, 1294, 251, 5, 30, "Input",ExpressionUUID->"99a5a9dc-5c91-4434-a2c4-c49d3344ca46"],
Cell[64536, 1301, 183, 3, 34, "Output",ExpressionUUID->"1d3dec1b-618a-489f-acc4-04743f9bbc84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64756, 1309, 784, 24, 66, "Input",ExpressionUUID->"dd0ed164-2d79-4e8f-80fe-2e73ababecae"],
Cell[65543, 1335, 385, 7, 34, "Output",ExpressionUUID->"cdd96ed3-b2e2-490f-bfa1-4e261ff93fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65965, 1347, 400, 10, 38, "Input",ExpressionUUID->"60b39c14-a6e0-4c2d-865e-3ec3a96ceca9"],
Cell[66368, 1359, 315, 8, 39, "Output",ExpressionUUID->"ca488e80-d10c-4d8d-90de-f95f9000a3ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66720, 1372, 396, 10, 38, "Input",ExpressionUUID->"0b46f591-5734-42c0-8948-d75d5583c248"],
Cell[67119, 1384, 315, 8, 39, "Output",ExpressionUUID->"abb24f80-c906-4f75-91b6-20adf86eb8aa"]
}, Open  ]],
Cell[67449, 1395, 399, 10, 38, "Input",ExpressionUUID->"7f37741e-232a-401c-9ce0-c10a2cdda54f"],
Cell[67851, 1407, 989, 29, 35, "Input",ExpressionUUID->"b3da3481-20f7-4e82-a05c-a468d1e1043e"],
Cell[CellGroupData[{
Cell[68865, 1440, 535, 15, 35, "Input",ExpressionUUID->"f8a520b7-f725-4132-a518-781593f96968"],
Cell[69403, 1457, 463, 13, 39, "Output",ExpressionUUID->"4941a467-cf18-4c55-a73d-971251e49207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69903, 1475, 380, 9, 35, "Input",ExpressionUUID->"973aa6ea-68c5-465d-bdd6-908f6e64ff66"],
Cell[70286, 1486, 314, 8, 39, "Output",ExpressionUUID->"6b49ea34-4503-4a67-86da-145d8061c0ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70637, 1499, 232, 3, 41, "WolframAlphaLong",ExpressionUUID->"615efd82-1364-45cc-845b-3bac4c8462d1"],
Cell[70872, 1504, 45288, 944, 1214, "Print",ExpressionUUID->"e74d954e-13a3-429d-a13e-8a8819cba4b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116197, 2453, 261, 5, 32, "Input",ExpressionUUID->"432987dd-3890-41d1-a7b9-2dedb85a3f8a"],
Cell[116461, 2460, 234, 4, 34, "Output",ExpressionUUID->"84691bd4-6393-4e02-b193-35b5d5a59998"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116732, 2469, 261, 5, 32, "Input",ExpressionUUID->"4a3752cd-a50b-4aa3-892b-e55348778345"],
Cell[116996, 2476, 206, 4, 34, "Output",ExpressionUUID->"0c0ad58c-11f0-4781-a2b8-bdcbbe200b41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117239, 2485, 396, 10, 38, "Input",ExpressionUUID->"d677c6ed-513f-4f43-acfe-4277ef1cff9e"],
Cell[117638, 2497, 341, 8, 39, "Output",ExpressionUUID->"ecfca8da-3fee-440c-ad54-4844567c36f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118016, 2510, 397, 10, 38, "Input",ExpressionUUID->"95572dba-d7be-4826-a661-f0fa8efac281"],
Cell[118416, 2522, 315, 8, 39, "Output",ExpressionUUID->"15a523fd-565e-4f52-ba03-025ecdf09660"]
}, Open  ]],
Cell[118746, 2533, 399, 10, 38, "Input",ExpressionUUID->"545a88d9-2e0c-4e05-b18f-0a8496754ef7"],
Cell[119148, 2545, 732, 21, 32, "Input",ExpressionUUID->"f3e07cdc-70c7-458b-bef6-5451be065623"],
Cell[CellGroupData[{
Cell[119905, 2570, 1335, 40, 35, "Input",ExpressionUUID->"4ffc5312-2e1d-4609-92e5-80a99f0c85dc"],
Cell[121243, 2612, 152, 2, 34, "Output",ExpressionUUID->"792abd00-7ee7-4c4e-b6be-def818667be0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121432, 2619, 769, 20, 33, "Input",ExpressionUUID->"6053c7e2-1a6d-4e1d-8a13-52e3c8147b63"],
Cell[122204, 2641, 580, 16, 36, "Output",ExpressionUUID->"0f1478d7-601e-47d7-8caf-19f3e4ec8bc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122821, 2662, 148, 2, 30, "Input",ExpressionUUID->"29d6a39b-a6c1-42c0-a289-0d65be7ecdde"],
Cell[122972, 2666, 530, 15, 36, "Output",ExpressionUUID->"d8845390-18fb-44c0-964f-a727e3964fd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123539, 2686, 626, 18, 33, "Input",ExpressionUUID->"7fbdcba8-4b09-47ab-8665-11537fa727b9"],
Cell[124168, 2706, 530, 15, 36, "Output",ExpressionUUID->"a9e59948-bfce-4440-b68c-f58df3abdd51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124735, 2726, 246, 4, 30, "Input",ExpressionUUID->"bf694d32-6591-4588-8831-1e38500e28d6"],
Cell[124984, 2732, 453, 13, 63, "Output",ExpressionUUID->"a7d17f27-450f-4e7e-9e37-dc51d2e78c01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125474, 2750, 244, 4, 30, "Input",ExpressionUUID->"d838aec6-df7d-4f8f-bf87-fb10fc2bd80c"],
Cell[125721, 2756, 558, 16, 39, "Output",ExpressionUUID->"2e98659c-77e3-42b9-84a2-d8ea3faed3fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126316, 2777, 807, 23, 38, "Input",ExpressionUUID->"2a4ff386-1199-4dd5-a865-2da7f7154528"],
Cell[127126, 2802, 5689, 147, 175, "Output",ExpressionUUID->"542b3c3c-125b-4f73-820c-c1dcefd82e63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132852, 2954, 596, 16, 38, "Input",ExpressionUUID->"bc071d0f-1aab-4387-98a3-ea2aa0a60bbe"],
Cell[133451, 2972, 1005, 29, 58, "Output",ExpressionUUID->"73dc7f05-3142-4e5f-8801-eb33c39b3ea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134493, 3006, 1408, 43, 38, "Input",ExpressionUUID->"ee0b4aaf-a811-4f61-a9ff-a481b002e593"],
Cell[135904, 3051, 1234, 36, 42, "Output",ExpressionUUID->"418123b1-25ae-47b1-8476-04d4aa75a677"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137175, 3092, 937, 31, 40, "Input",ExpressionUUID->"ceea3854-e779-4e3a-b6f6-448026e87e1a"],
Cell[138115, 3125, 782, 24, 41, "Output",ExpressionUUID->"ee1c0251-4737-448d-bb19-a13d18dab111"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138934, 3154, 1410, 43, 38, "Input",ExpressionUUID->"898c3d15-283c-4a2b-b597-5edbee5b87b9"],
Cell[140347, 3199, 453, 14, 42, "Output",ExpressionUUID->"873d22a8-9ae8-4b13-a987-b4e2b631b7d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140837, 3218, 1001, 32, 40, "Input",ExpressionUUID->"94534c0a-2b75-4285-b062-0a2efa6443c3"],
Cell[141841, 3252, 344, 9, 34, "Output",ExpressionUUID->"03966bc7-2531-4c2f-8f4c-09acd14c5378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142222, 3266, 2060, 60, 38, "Input",ExpressionUUID->"310fa95c-3b75-4e7f-882f-f837683e4511"],
Cell[144285, 3328, 369, 10, 39, "Output",ExpressionUUID->"00fd15c9-b497-45d7-b7a1-5b3dfbe82e37"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

