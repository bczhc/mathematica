(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    263023,       5116]
NotebookOptionsPosition[    257473,       5014]
NotebookOutlinePosition[    258009,       5033]
CellTagsIndexPosition[    257966,       5030]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Fibonacci", "[", "n", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881785859059753*^9, 3.881785920457778*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3b391d36-bc94-4127-bbad-b74bd71155f3"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.}, {1., 0}}, {{2., 1.}, {2., 0}}, {{3., 2.}, {
           3., 0}}, {{4., 3.}, {4., 0}}, {{5., 5.}, {5., 0}}, {{6., 8.}, {
           6., 0}}, {{7., 13.}, {7., 0}}, {{8., 21.}, {8., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$7981#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], {}, 
      PointBox[{{1., 1.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 5.}, {6., 8.}, {
       7., 13.}, {8., 21.}}], {}},
     Annotation[#, "Charting`Private`Tag$7981#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 8}, {0, 21.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.88178588771649*^9, 3.881785920735763*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"cb44df9e-db05-41e8-a06d-7834167a4621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.88178594440303*^9, 3.8817859955859203`*^9}, {
  3.881786041323806*^9, 3.8817860552419777`*^9}, {3.881786830819317*^9, 
  3.881786831289866*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"9812f624-477a-4d7f-87fa-9771e791795a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
AVX42U0=
       "]]},
     Annotation[#, "Charting`Private`Tag$84733#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{802.5, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8}, {0., 20.999998348635152`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.881785954527372*^9, 3.8817859957834682`*^9}, {
   3.881786041893751*^9, 3.8817860555133047`*^9}, 3.88178683150218*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"b8d89bc2-adf6-488d-8635-f7c1ba264425"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Fibonacci", "[", "n", "]"}], "==", 
    RowBox[{"1", "/", "2"}]}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.881786026698855*^9, 3.8817860284893827`*^9}, {
  3.881786070827167*^9, 3.881786140810093*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"03197bfb-9f29-49be-83cc-4950e671988b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Fibonacci", "[", "x", "]"}], "==", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881786146735798*^9, 3.881786165737856*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"09fc4db3-fe1b-4bbd-b071-efccd2cbfe3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.45070666657454406`"}], "}"}]], "Output",
 CellChangeTimes->{{3.881786160553155*^9, 3.8817861659670677`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"0f425629-d639-4995-926b-1e79a89244fc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"root", "=", 
   RowBox[{"Root", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Fibonacci", "[", "#", "]"}], "-", 
        RowBox[{"1", "/", "2"}]}], "&"}], ",", "0.45070666657454406`"}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.881786425815243*^9, 3.881786465993981*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"2264d1c2-0fc4-45ad-ad91-4a4faab20fde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "3"}], "-", "\[ImaginaryI]"}], ",", 
     RowBox[{"3", "+", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881786286314661*^9, 3.881786322130555*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"cd12adbb-2645-483e-ab54-886d4f3b1884"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd20HI5mUVxuHPRkzMKFsoSBvRaDME0UBCxX1oMSAIgkElZqAWliDRCBop
YjCiKJNgGUjQUAhSBE2rqM38kRAscPMhiMzCBkMkojLCwuCLeN/rWdwr+YH8
n3POtVB03uvu+tatX3/fwcHB6WMHB///66+u/sybR0fv3569/z+vHx397fzH
37jisZNfvmz12Z+//rEz5y5dfc39v3jp8PJjq5/+7HfvufbOS1Z/6MoffvjF
U0fn9cHZT916y/X/Xf2PTx7+4MLhv1df/P2pV795+l+rD7/0kWvePfHO6ide
vfvXl//xr6vvfe9nJ64//tbqm6+7+JvPnXlj9e3f//wD5y4crv7ON47989mH
frf64V1Hf2X396e+l3ovNU9q3tQ+qX1T90jdK3XPqXtPeUx5rd57dm9P7e/I
V/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDXf+l7qvdQ8qXlT+6T2Td0jda/U
PafuPeUx5bWab/X2vU+/8vhVP/rL8tV8NV/NV/PVfDVfzVfz1Xw1X81X89V8
NV/Nt76Xei81T2re1D6pfVP3SN0rdc+pe095THmt5lu9PfjcjV+99s63l6/m
q/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvvW91HupeVLzpvZJ7Zu6R+peqXtO
3XvKY8prNd/q7b793fhqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5lvfS72X
mic1b2qf1L6pe6Tulbrn1L2nPKa8VvOt3u6+44MfOP7um8tX89V8NV/NV/PV
fDVfzVfz1Xw1X81X89V8Nd/6Xuq91DypeVP7pPZN3SN1r9Q9p+495THltZpv
9Xbb+Qf/dOLFi8tX89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8Nd/6Xuq91Dyp
eVP7pPZN3SN1r9Q9p+495THltZpv9XbL/k58NV/NV/PVfDVfzVfz1Xw1X81X
89V8NV/NV/Ot76XeS82Tmje1T2rf1D1S90rdc+reUx5TXqv5Vm9PXvbcR8+c
u7B8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/Ot76XeS82Tmje1T2rf1D1S
90rdc+reUx5TXqv5Vm8P/OG+l39y8rXlq/lqvpqv5qv5ar6ar+ar+Wq+mq/m
q/lqvppvfS/1Xmqe1LypfVL7pu6RulfqnlP3nvKY8lrNt3q7a38Xvpqv5qv5
ar6ar+ar+Wq+mq/mq/lqvpqv5qv51vdS76XmSc2b2ie1b+oeqXul7jl17ymP
Ka/VfKu3Hz//iZOn//zK8tV8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/Nt76X
ei81T2re1D6pfVP3SN0rdc+pe095THmt5lu9nTr+2tkXrnpp+Wq+mq/mq/lq
vpqv5qv5ar6ar+ar+Wq+mq/mW99LvZeaJzVvap/Uvql7pO6VuufUvac8prxW
863entnfga/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvvW91HupeVLzpvZJ
7Zu6R+peqXtO3XvKY8prNd/q7dG///Lm377w0+Wr+Wq+mq/mq/lqvpqv5qv5
ar6ar+ar+Wq+mm99L/Veap7UvKl9Uvum7pG6V+qeU/ee8pjyWs23erth1+Gr
+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mm99L/Veap7UvKl9Uvum7pG6V+qe
U/ee8pjyWs23evvafm++mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nW91Lv
peZJzZvaJ7Vv6h6pe6XuOXXvKY8pr9V8q7fbd/88Xr6ar+ar+Wq+mq/mq/lq
vpqv5qv5ar6ar+ar+db3Uu+l5knNm9ontW/qHql7pe45de8pjymv1Xyrt9O7
f59evpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv51vdS76XmSc2b2ie1b+oe
qXul7jl17ymPKa/VfKu3L+735Kv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6a
b30v9V5qntS8qX1S+6bukbpX6p5T957ymPJazbd6u3f337OWr+ar+Wq+mq/m
q/lqvpqv5qv5ar6ar+ar+Wq+9b3Ue6l5UvOm9kntm7pH6l6pe07de8pjyms1
3+rtkd1/j16+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nW91LvpeZJzZva
J7Vv6h6pe6XuOXXvKY8pr9V8q7eb9nvx1Xw1X81X89V8NV/NV/PVfDVfzVfz
1Xw1X823vpd6LzVPat7UPql9U/dI3St1z6l7T3lMea3mW719Yff/g5ev5qv5
ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar71vdR7qXlS86b2Se2bukfqXql7Tt17
ymPKazXf6u2O3Z/nWL6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+db3Uu+l
5knNm9ontW/qHql7pe45de8pjymv1Xyrt3v2e/DVfDVfzVfz1Xw1X81X89V8
NV/NV/PVfDVfzbe+l3ovNU9q3tQ+qX1T90jdK3XPqXtPeUx5reZbvX179+cp
l6/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvvW91HupeVLzpvZJ7Zu6R+pe
qXtO3XvKY8prNd/q7aHdn4devpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5
1vdS76XmSc2b2ie1b+oeqXul7jl17ymPKa/VfKu3x/Zz89V8NV/NV/PVfDVf
zVfz1Xw1X81X89V8NV/Nt76Xei81T2re1D6pfVP3SN0rdc+pe095THmt5lvt
92HLV9fvy5avrt+XLV9dvy9bvrp+X7Z8df2+bPnq+n1Z6vdlqd+XpX5flvp9
2fKt91LzpOZN7ZPaN3WP1L1S95y695THlNfq+n1Z/gcCKVdK
      "], {{{
         EdgeForm[], 
         Texture[
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1: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
cVfzO6HuDxr9n4yab23KXwDZdbfknlf0GBG8wE9ek0fvaG4Yux/h34lmt+LZ
tWRmOY1ZyKBns6gLXrmfeOVd8OrOZ+RGRmqmRVZK6CAELpwPoTwYPsE8fMIl
JB1C2ixiDRK/VupXyf0ylV+s8Qv1DN9EnthwrhPZdnt33MA2ZOF4dBte+YZX
xPEe73p3973rB95ZgW9M4Rsx+IYcvn6vrxeFBghgkLIOscahM82wXzrG8saZ
vQlqbZKcmSQm5/CRJXRgDena8rXseRqP3HVCZ63cVq0zVtrUtc7TevdJo2+n
GVtpJee6yfFBsn+MbJ0hm1aQuh13xbE9V2rIUZzmqg+ytctp+tFcQ2ep8WON
qajBlNxtDpmzvN+1vpPYgg22tw7ze7cuHFZG45K480HVz008r/LMYhY1mUMO
5OFt+WhNAVxc6Msv82ZVeVI/QvGNYGQr8L7DGdRjezJofjBmuD2t/W1ReWX9
9KcdwbfHh19KON/IFr5XD1wyZz2DrwpfJkv/a6vi/5lU/s2m+u9PNP8s1/2r
Xvsns+o7u/yy6/Q6JL7rEzxCec/x41fkYTB9EMruhfu3o9mNeHY1iVlKpefT
6ZlMajKbGsshh3M/8cq74CUz0BITLbSQfDvBA7ATN3rs8x2h0Anu4pF2Pm0W
MDqRXyPxK2R+qcIvVPn5WubESB5ZsH0HsgV6t9zAltu8AWnXPLJVr2DTe7jt
3d71ru55p3jeYZl3UO/rt/t6PL4uxN2DO/soSz9r6A+oB/ynw+zJKLM7Rq2O
EVPj+Ng0NrSA9q4gHRu+xm1PHResFTirpNYKjbHMoq50nNaCJ3Xe7QZ0qYmc
6SBH+8jeEbJ5kqxfQmq23GVHtmyJIVMuyVLtZ2gWk/XDWYb2YkNNlTG/zhTf
ZQ6etbzdtb4RW1/rba8c5mC3NgxWRODiaJoX6z+IZzdTzkOamsgi+3Pw1ly0
Jg8uyvfllXgzKzwpNVB8PRjZ7Hrf5gzqsj/us9wfNt6a0F2bVV1ekv24If5m
l/fnY+5nIs7np8t/kk98qSmT/pce+f8xrfyvG6r/dqj+H6eaf9Jof29U/dkq
/94pvQyKr3uEd2H+I/TkOXH0iuIGM/sh/t0Pfk4Uux7HrCQxiyn0XDo9nXl+
P//BayD3E6885lRHi4wU33wuGOLYiR2BCNfrO0ChIww4JmwnlInHaPmsSsTK
T1mJjBUo2BMNc6QnuWZs1w6vuzwboHPDbVpza5Yh6ZKHv+Y52PRscTzLO56J
I8/AqbdP6+22eTshbzvs7sQd3ZSlh9X3BFS9fvEAezzEbA+fdw/E5Ag+MokN
zKLdS3Drmq9+y1OzD1bxnOUSa6naUGRWldklla7jGs/2R2SxnphuJUa6ie5B
onGc+DiPVG24i7m2DLE+TSZJV+6lqhcSdIPp+tYCQ1W5IbfWGNNhej1jfrVj
eSm2BumtLxym127Ne1j+ARdFUifR540Zu5HEzKdR4xlkXxbeko1W58CFub7c
Im9GmSe5Cor7CEY0uN61OIPa7Y+6rff6TTdH9Ncm1b/MKX5YPv3LhvCLbd4f
Dw5/d8j9+wPJ3wxZDv76QPFf9pV/faL6v0/Vf6vW/KNe9Qez/Eu79AdActkt
vO7l30VOHmFHzwjuS2r/LbP73r8dxm5GsWtxzHIis5BCz6bR0xfxQ41mk0M5
F7x6cy94ibW0QE99Egx+6MAOXMi+x7uHuA8w5yFhPaKMx4zmhFUKWKmYFZ2y
PDl7pGK4OnLfhHFs8CrgWXU5VkHTslu9CEnmoZMVaH8d2tiEFjjQGNfTK/Z0
aTwdVm+b29sCg22Yo500dzK6zoCyyy/qZQ/7Gc4gtThIjA/hQ2NY7zTaMQ83
r/hqN6DKXbD82FEishQpDflGVZFNUgYcVUKcanihhphsIoY6iK4+on6EqJ5F
KtbAwn1bmlCfLBWnKHaTVPNx2v5UXXOevrzUkFVtjGw3BU2bX2xbnossz/TW
p3bjS7cm2CcLwYXh1HGkfy+aXU9g5lKosTSiNwNvyUKrsuCCbF9OgTe9xJNU
AcXWgOF1rndNzqBW+8MO690e041Bw6+j2kuTqu9n5X9ZPP1iRfSHNeG/rIj/
ftL4D5nU6N/pRH+tVP6fStX/pVb9d73iX0yyf7NKv3ZKfgBFVyDBdR/vDnr8
ED98Rh68pPfesDvv/ZwwdiOKXY1llhKZ+WR6Jo2eyqDGM6mRrAte/TmfeOXS
QjXN01FHhnPB4Ps2dA+AdyHvDgzuoc4D3MIl9Ye0+oiV89hTISsUs8dSlqug
9zXkjgHbtPqWndAy4FhyGRdB1ZxbPAMdLUK7K9DaGjS3AQ3vQZ3nTbnK02r2
NIOeBp+rCbO3kKZWRtsWULT7hV0st4fe7KMW+onRfnxgGOueQNpm4cZFb/Ua
VLbtKuE6CoWWfLkhR6/Ks4qLnUel7q0KeL4Kn6gnBtuIjh6iboionEJKV8D8
PWuyQJdwKk6U7ySoZqM1fUm6hhxdabE+vdLwoc34bMr0dNv8RGR5rLc8thuf
u9WvfdJ3uDCUOgr370aeBzY9l0SNphI96XhzBlqVCedn+rLzvGlFnqQyKKYK
DK91vWtwBjU7HrXZ7nSab/Qarw7qLo2qv59Qfj0t/9Os9A8z0t+Nq/6hzfpF
ONXwmXP3b4zC/6Y//VuD9B9Np7+3Sj63i/8CCH908694edfh4zvo4UPi4Cm1
H0TvvmG33/m3wtj1SHYlllk8j5xzXqn0ZDo19onXYPYnXjkXvAQq6kRDcnXE
vgnftaI7Tpjj9mz5wG3UsYub90jdPq08YGXHrJjP8oXsoYTdl9O7aoKjR9fN
vkUHtOC0LwCGOZdyBhRNug/n3NuL7pWVf3e5uNv4UIsCajJB9S7oo9dVj9oa
SWMTo2kOyFv8gnb24NMKfq6HGO7FegfRzjGkZQqum/dWrkAlW67CfUce35Ij
1WfqlNkWcb7jsAjcKvXNlePjtUR/M9HeSdQOEOUTSPESmLNjTeTr4iSieNl2
rHImQtOToK3L0hUX6lPK9SGtxsdTpkcc80OR+YHe8sBueAqqXvpO32KC99Rh
mH8nnF2NoWcTqJFkojsVb0pDK9PhvAxfVo43tcCTWALFVIAfql3v6oCgRsej
ZtvtNsv1LtPVXv3PA9rvh9Vfjyr/NKr447Dqd136fyq3f/caL/nSt/wPdu7f
Wfj/YBH+i1X0B7vwC0DwDcj/CTq54ju+jhzewbgPif2n1G4Qs/PazwlmN8LY
1UhmOZZZSKBnk+jpVGoijRrLIIczP/HK/sQrh+YpqCMVua8lzgWzbUG3HL5N
0LPhdW0hdg5m3iG0u7Rijz3lsqJj9oTPHojYXSm9rSQ2deiqyTdnd885bLNO
/QygmHQJx8CDaXBr/sLlMrUM9m25m8+bcjlUZ4RqAajaC9SgtjrCWM+oGwKy
Rj+/5WIFv9ZBznYSQ11Ydx/aPow0TfhqZ71lS+7CdVferj37xJwp0adplOlm
UY79MN+1WeSdK8FGq4i+BqK1najpJUrHkMIFMItjjT/RRotFMVJOlGI6TN0V
q6lN1xbk65JK9W9bDA8mjfc5pnsi8z295a5d/whUvvCdvsb4wRQ35KJ2rETR
M3HUcCLRlYw3pqKVaXBemi8zy5uS50kogqLLwA+VruAaIKjO8bjRfrvZ+lu7
+UqX4ece3Xd92q/7NX/qU/+xS/s/G0z/muO89AzL+YaY/hc355+c3H92nPze
wfsM4H0JnnwLHf/kPboCH15HD+7g+w/I3Sf0zguG89q/Gcyun99DJLMYw8zH
0zNJ9FQKNZ5GjX7iNZBF9mUTPTlEVw59LKO4SvKTYLBNE7Jh8625oFWPax22
baKmLULDoWTbrGSfERwyxyfMnoDhSOgtObGuQZeN3hkrOG23TTt0k075GMAf
du1PgBsz4ML8J5fLOthw5P4oddfo3ZVOd7kHqESs1YShllZ9DEjr/LxGdreF
Xm0jp9vxgQ6ssxttGYTrx3zVU56SeXfeKpC9bc84MqeJ9ckqZbJJlGE7zAE2
8z2zhehIGd77EW9pwau68aJhJH8OzNi0xh5rI0TCyNOtCPlkiKozWlOdqs3L
1cYX6141G+5OGu9wTHdE5tt68y277gGoeOaTvMR4b6iDd/7tEHY5kp6OpYbi
ia4kvDEZrUiBc1N9GRnelFxPfCEUXeL+UO4KrgKCah2P6+13Gq2/NZuvtJl+
7jB816n/ulP3RbvusybD78stf04Brj5C079nRn4Pr/7OvfM/XQd/cB1+Dh59
BR195zn82ce9ihxcx/bvELsPqJ0n9PYLdusVuxHMroad3wOzEMPMxdPTifTk
J14j6eRQxideWURP9jkv6vCU2peT2yp8U4utG5FVq3cFgJYgYAW2raHGDVy9
SUm3GNEuwztgDo+YHR6zKaLXZcSqGlnQe6cs4ITNOmHXjTulIwCv37U76lqf
dM3NuEbnXV0rrlouWC0BK3RgmcNdAjlLEUsFrq+ildX+0xr/SR2703ixgp9s
wftasfZOtKkP/jjsq5jwFM26s5eBjC172oE5WahLUCjjjaJUKzfTuZEDzeYh
w8V4dzXe3IhXduAFg2juDJi2YY0+1IaJhOGnm2HyiWBVe6S6MlmTk62NKdK9
aNbfnjDc2jLeFJlu6M037Lp7oOKJT/wCO3l13p75Oe/YpXB6KpoajCM6E/CG
JLQ8Gc5N9qWne5OzPfH5UFSRO6zMFVwBvKx2Pvlov1tvu95gudxk/qnF+F2r
4esWwxeNhn+rNv1bge2bOOC3B0jKT3T3n/D5f/Vt/AHa+Qza/wI6+Npz8L3v
4BKyfxXdu4Hv3iF3HlCcJ8zWc//mK3YtmF0JYxYjmPnztBxHTyXSE8nUWCo1
nE4OZpD9mURvFtF9ziubOpCQu1JiS4GvqdEVPbxs8S463Atu56LPuowYVnHV
Gnm6zgg5zMkec8BlOMfMuoBePcWXlMiczjNudo1araN27YjjdNB50gtsDwGr
48DMFDA8A7Qvuar2XOWfXBNFdrAAchbBllJcV0YrK/ySSv9xDbNdRy81kBNN
eG8z1tqGNHTDNYPesjFPwbQ7cwFI27An75kTzsuSTBltECVZuGmOjUz3bDY8
VIB3VeBN9XhFG57Xj2ZPgSlrlkiuJkQoDJNshMjG3yhbw9XlierMLE1UgfZJ
k/7GhOE6x/ibyPSbwXTNrr0Dyh/5RM+w4yBq77V/K5hZDKMnI6mBGKIjHq9P
QMsT4dwkX1qqNynTE5cLRRW4w0rA4HLgZaXzSbXjXq3tRp31Sr3lpwbTdw2m
v9Sb/lxj+rzU8mWW/cdI1417SOIlqvUrauozdOUz3+bn3u0vvbvf+HZ/gHcv
obtXsZ0bxPYdivOA3nrCbj5n11+xq8HsUhizEMHMRdPTcfRkIjWefN78UMNp
/z9eWURnNrUnIrclxLoMX1GhSzp4weQ5r0mzoHPOa1mA9UuYcoUUr9L8DeZo
m9nbZzYPmVUevSzGF+TItNYzanINWSxDNs2gXdLnOOpycvqdyyPOqXFgcApo
nQfKd1wlAleR2pVvc+W6HXk+cyGuLaYUpX5xmf+oktmqpRfryLF6vLsBbWpG
6jrhqj5vyYgnd9KdNnfhR0rYufCPRZ8qInWiODM3yb6RBs5kwIO5eGcp3lCL
l7fgOT1o5gSYtGIJP9AECwTvxRvvpGMvlS1hqtIEdXqGJjxP+7BJd23C8CvH
+KvIeNVgumrX3AJlD3zCJ/jRc2r3pX/jDbMQSk9EUAPRRHssVhePliXAOYm+
1GRvYronNhuKzHeHFYHBpcDLcufTSsf9avvNGtuvtdafay3f15r/Um3+qtzy
VYH12zTHL2GuW3fh+Mtk/bfM6OfEwufo6hfI5lcI51tk+0d0+xds+1eCc4Pc
ukNtPWA2H7Prz9nVV+zyO2YxlJmPYGaj6ak4eiKBGkuiRlLIoTRyIJ3syyB6
Mv+D146A3BQTq1JsUYHOa+BZo2fGBk65HNMe8xysm0cVi4RoiT5ZY7hbzM4O
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
6/EaE1pogR0JkC0ZMGd4dHkuRYlTWLXIqp2LPzEdc2E88uZw2OPe4NftB3pf
RQzfj5+8xFg4ygVLiLjAjCSkodIiWFg/T785cuBVW1jzrZD2w0HdqdQelaiP
ou7flje49szwt49Hvuka/WZ8aP1c90+uNzuhhr34UzLb8PZmxOqluOXTNF8d
y3uIi5cI0FyClxi2SyCTFFTLAKXSI9N4JDq30ODmG11ck4tldjLMTprJSTU4
KTpnvNoZr3BRxC4a182ge/h+XpZoNDUKy430lkR6KyN9h6OWj0Yv18csH49b
PkFdPklfPslaPslZPslfPilcPiHxnZD5jit99WrfMa23Tu89avQeIXnhtQn4
YSte84HXqSvosRvI4TtQxUOg8Kk7r2Exu3UuvWcydXQ4daY7a7E5z/20EL5V
4r1S7T1b7z121nvosq/iNlL2xFPYuJjVPp3UN5Yy0J0y1JQ0/NA6etU4fjxp
vCp9PC9nPLFgQlo7Qbk2GftyKqpvOmJmMtI5GA91MvBm9upz3tt7EkLR+05o
8UMGtMAEp5hBqx0wpnk0OS55kVNQscismYurn446Nx5+fTjkQd+BhvZ9XY2h
Qw9jJq5Q5+tYnhIxkmlAElIQSQEirFugXx/Z97It5PXNg201gd0p1B65qDdW
3b+pYPCbc0Nrno583TP69cTAuvnOze7mHfDLvfiTfSv3Dr69Eb5yIXb5JM13
hOmt4uDFfDRXiKSJ4EQxZJSAaimgVHhkao9E6xbp3XyDi2t0sY0uptFJNzhp
eidV66SonBS5iypy07luJh3gx4OqWNgSgzqisewovCjKWx7lOxTtq43xHY1d
Pha/XE9dPs5YPsEiIpzl43zfcZHvuMRXL/MdU/qOqb11Wu9RvfeIwVtr8tZa
8MMJeI2fV3UifsiOHb+EHr0GV9+CSu8BeY9d2S8XM1pmHV2TScPDSdNdaWSL
y5M8+Eah91KV9/RR79HT3oqLZMtf8SNPfsNCRtu0rXfU3t9lH2xMHH5gGbmi
GztuG6t0jOdmjdvyxiXVZONE1POp8N6p0OmJsKWBGKiDir9mrj7jvL0jIksY
x9V4lQ7NN8DJJjDBBhhSPeosl6zAyS9bZByajzk6HXl6IuzKSPDdvv0vOgLb
mw4MPIocuxo/W89wl/CRLC1iTUIkeYjgyALt2kjQy/bg1zcPtFUHdidRe6TC
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
OD44S3y83/Jwfcehj+tZiMbFqXM91Q3vlCNP+CtfXR98sXf++znrwM75czv/
qzrRt3TJo0LZ8zz52yzFhwzAkax0TQE9kiDveOIrIHhFEOkNxPYswYs4xyfU
TSRilrfCSrT+8yaMDIS+lPChYJEeaJjHX3mRvBHfe15EdEAokYHjQ9g3iFQ3
UiLklwT7W0tAKhxEhkMocGg6Ep6BRFKR6Ew0NhONy0ITstGkbCw5B0vNwdJy
MUquKj1PlZF3zytf11qi7yk0fsozTWSa51Itq3Hm7VD9oZ/q3EN5ay8UvDgU
PBvjPyvnvkhneyeyE8NZ+d7MmkBGT+j1ZNjlauj5YdDpdcQ+O35dkDwvTR1T
pvWiqU2azAptAY0w3dZFaHpJ0IyLePst6+zp0a3NAu/5kPhli8y2CnAuUXrl
QX5UYmUIi0cjI7H4EDUlCM8N0BaTdJXe+np3Y5uTqfe9efiVaeqJbuGBau0b
cPdPkpPfcBj/uMf6n59u/4528w/+V185Xrh/d5byZL/t4fquQz/XsxiJSVRn
+6pr7OCh58LF7xh7vzs++8PyzZ/GWH/u5n3dJPy2UvKwRPqMJn+To3ifCTim
K13TiOHCOwEmxRHzRWDk/V5fCHFiFe5/r5PxIwSfCb4ErCRv4l+iF2HvsiKL
9cCi7nkFeyB+BC/Yyssn4D5HJQzyjrSWReuXS6Qm+iZBJCK0GQ6wrioUODgd
Ds1AwqlIZCYSnYXEZKFx2fe8cu55ESJejJyHEbzyVdR8gldHqaG/yDiSb5rK
Mi+S7zbizXvhuuMA7NILYDkKRK/2hS/H+K8quK+pHFIyOzmKTSOxaoJve8Ku
JyMu18LPD0NOb6L2OYnrwtQ5GXlUSe7FyI2EzbmYpq0kaxoiNP3+0JybeNuW
dfbs+Pb5Eu/lsPh1u8yuBnApVXrRIP9M68qAhCegUVFYQqg6PViTH6gt9dNV
exua3I2dTqaB95bxl8bZJ9qlB9jmN8DBH0UX/8Zk/f066++7b/+BevOPpKuH
9hfe355Rnu53/rix6zDA8SqFo5PVWf7qio9o3yvx3EPW9h/PT/64cfWnKeZf
+rlftwq/qxU/oEttiuSv8xXvswGHDKULGfRIgbwTIZK1xMQQgy2x1xeChll5
BWDR94N8AuleBu9DbJclexFOlkRPVYIHwSua8Czf8/L4P3lBXmH3mWAxkFc8
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
             
             "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
            False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSizeRaw -> {144., 144.}, 
           PlotRange -> {{0, 144.}, {0, 144.}}]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Py0=
            "]]}]}, {}, {}, {}, {}}, {{
         Directive[], 
         LineBox[CompressedData["
1:eJwt0bdNgwEQBtAfTMY2OdsgWsIChJ7QURE6CrDJyYmcBAsQFoAFCAvAAoQF
YAHCAsCzRPGkK06nu+86p5fHlgqCIEhRSL7uYJApclxyzyvfVGnqZZQkp1zz
yDu/xA3rZ4IM59zyzCeRUBB0M8wsCZLMMc8CiyyxzAqrrLHOBinSZMiSY5Mt
ttlhlz32OeCQI46ZYYguwnzY64kbzkgzTh8xftz1xgNXnJBghB6ifMnnhTsu
yDLJAO3EidFGKy0000QjDdRTRy01VOczJ0qEMJVUUE4ZpZRQTBGh/3/+Ac0Z
Le4=
          "]]}}}, VertexTextureCoordinates -> CompressedData["
1:eJxd219o1WUcx/FRCHrn7sLywgqvZJ2L9KKwcJARRFDBCLqIBAnWRX/wbgbJ
hg3igOxiF2tYkexIF2NWF2eTNlpazKCIRfTHmZbzpKUxCgpOYMme1zP4eHN4
X7g/35fnd36/53ncceClpw7e1tPTM3J7T8+t1///7Nk/fOChnp7Xd996bT99
6dBc692H9ea7P7842zpVuzGx/Y3xobnafVvmxmdbn9Tuf2T1aqv3s9oDR7bu
HR86V3vw4wePjax+WXvh8IevzLa+rr207bG3Zs4v115uXzjT6v229srAoRvH
939Xu/PXljvGh36ovTb29r7mzPna3cbuF0dWL9QefuHgub3Ni7VH9zSem21d
qt3c1P3z/sWfa499c3Z05vwvtcffO7Z919+Xa0+++uwHrd4rtd/Zt/PRe3Z1
ak9tXfvx+P5fa7//0+mXtz1/tfbM9NFN40PXan/02pMTveO/1Z57/K77mjO/
b8zrzs6nm7+4XvvMtVPPjKzeqH1u9vD1mzf/qM33ZHHlq/lqvpqv5qv5ar6a
r+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nWeRVfzVfzPVnfp+u+
/+5Yd+Sr+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6a
r+ar+dZ5FV/NV/PVfO8tbnw1X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8
NV/NV/PVfDVfzVfz1Xw13zqv4qv5ar6a787ixFfz1Xw1X81X89V8NV/NV/PV
fDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfzrfMqvpqv5qv5PlBc+Gq+mq/m
q/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+dV7FV/PV
fDXfJ4oDX81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz
1Xw1X823zqv4ar6ar+Z7oMydr+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+
mq/mq/lqvpqv5qv5ar6ar+Zb51V8NV/NV/M9XebMV/PVfDVfzVfz1Xw1X81X
89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/Ot8yq+mq/mq/meLXPlq/lq
vpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nWeRVf
zVfz1Xy/KnPkq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar
+Wq+mq/mq/nWeRVfzVfz1Xy/L3Pjq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lq
vpqv5qv5ar6ar+ar+Wq+mq/mq/nWeRVfzVfz1Xwvlznx1Xw1X81X89V8NV/N
V/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1XzrvIqv5qv5ar43ylz4
ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar51
XsVX89V8Nd9/yhz4ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/m
q/lqvpqv5qv5ar51XsVX89V8Nd8j5ffmq/lqvpqv5qv5ar6ar+ar+Wq+mq/m
q/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nWeRVfzVfz1XyPlt+Tr+ar+Wq+mq/m
q/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+Zb51V8NV/NV/N9
s/xefDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/PV
fDXfOq/iq/lqvprvsfJ78NV8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/PV
fDVfzVfz1Xw1X81X89V867yKr+ar+Wq+fu52nFPgqxuxD9oX+2b9sc8yEOvy
g7GOuxDrfkuxTrQc6wor8RzaieeWtbjP7cZ90XB8jo7GdbcZ79OxcM1Xvpqv
5qv5ar6ar+Zb51V8NV/Nd+Mc0brvRPk5+Wq+mq/mq/lqvpqv5qv5ar6ar+ar
+Wq+mq/mq/lqvhPhqPlqvpqv5qv5ar6ab51X8dV8NV/N18/VjnNEfHUjzin0
xb52f+yDDsS+2WDssyzEuvxSrOMux7rfSqwTdWJdYS2eQ7vx3DIc97mjcV/U
jM/Rsbju5vt0Mlzzla/mq/lqvppvnVfx1Xw1341zfuu+J8rPwVfz1Xw1X81X
89V8NV/NV/PVfDVfzVfz1Xw1X81X8z0R11nN90Q4ar6ar+ar+Wq+dV7FV/PV
fDVf37cd5/z46kacI+qLcyf9cU5hIPa1B2MfdCH2zZZin2U51uVXYh23E+t+
a7FO1I11heF4Dh2N55Zm3OeOxX1Rfo5OxnU336dT4ZqvfDVfzbfOq/hqvprv
xjncdd/p8n34ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+03EfpPlO
x3VW850OR81X89V867yKr+ar+Wq+vm47zuHy1Y0459cX58L64xzRQJw7GYxz
Cguxr70U+6DLsW+2EvssnViXX4t13G6s+w3HOtForCs04zl0LJ5b8j53Mu6L
8nN0Kq67+T6dCdd85VvnVXw1X81345z8um+7fB2+mq/mq/lqvpqv5qv5ar6a
r+ar+Wq+mq/mq/lqvppvO55TNN923Adpvu24zmq+7XDUfOu8iq/mq/lqvvP+
XvHVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xzn47lT852P+1rNdz4+
NzXf+Xhfar51XuVV89V8Nd9F/w6Kr+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar
+Wq+mq/muxjrCJrvYjynaL6LcR+k+S7GdVbzrfMqbpqv5qv51vd1/D8WvroR
5+T74lx1f5zDHYhzm4Nxzm8hzoUtxTmi5Th3shLnFDqxr70W+6Dd2Dcbjn2W
0ViXb8Y67lis++U60WSsK+Rz6FQ8t+R97kzcF+Xn6FxcdxfifXomXPP1P0VU
0yg=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Method -> {
      "DefaultMeshStyle" -> Automatic, "GridLinesInFront" -> True, 
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, 
             RasterBox[CompressedData["
1:eJzt1j1IVXEcxvEbZUM2FIQ5OFSLLUbUUhC6NFRDN6IisqGCmoRehmrIpUCa
pDAiQ7LIgkzK3qTQyGsvammZld1eNEsrtRcbahGhznmeXJIv/7HFH+dy4H7Q
c8/5/X/P/8zdtnPt9smJRKI1+kyKPlOiz8nyuF4V/HtOqH6M+37sPL+4M7e4
cxh9zUhVcqSKfZ+KvfLnyuhgb96dEx3sw99V6LOLUllFKfaCwbL8wTL2HSr2
0r4l0cFetyUzOth7uuP6hj61sDajsJY9L30wOtjXq9jV3lz2c8m4wV/R29vi
Yv8Vt7eSPUcNZl+uYld7s9iP5ccN/oLeUB8Xe3/c3lL2TDWYfbGKXe3NYD+k
Bg+hX6yOi13tLWbX+CbZ56nYV2mAB9H3qMHsPrOrvUXsGt989pkq9qUa4AH0
rWow+2EVu9pbyK7xzWN3PrM7nz+jO5/Z9yuf2Z3P7M5ndufzJ3S1N8Wu7pax
O5/Znc/szmd25/NHdOcz+wI1mH2D8pnd+czufO5HVzy3sau9lezOZ3bnM7vz
md353IfufGZ3PrNPV4PZnc/szmd2jW/6A7riuZrd+czufGZ3PrM7n9+jO5/Z
dSpnb9IAsw8pn9mdz+zO5150jW8du/OZ3fnM7nxmdz6zr1YD36Gf0gCy+/W2
J5CP7M4/dudbdyC/2A9oAbM7f94G8oXd+cHufHiDPk3zz75JC4Dd8/s6MJ/s
KzR/478fO5+A78fOA5ofdsdfOrD+2bscYOh+v3iJ7vcH9ha9H7Bnq8Fd6N7f
2b1/s3t/foHu/Zdd7R15ju79k937I7v3v2fo3t/YF2n/Ynd7O9G9/7B7f2Hf
pQF+it6o/YF9hvKf3fnegX5J+c0++juuJ+gVaiD7MuXrY/RexWd7IB/ZnX9t
gXx7hL5Z+cU+qgX8MJA/rYF8aUH3/sjufGhGn6X5f4B+XQuAfZ3m935gPu8F
5u8u+kLNF3uH5qcpMB+pwPpnr9H6buT+6QbvcH+0Pm+jZ2v9NaBv1PqqRz+i
863A+rjJ11f/6/j66u8Nvn/171qgP1cDz/8K+mk938voc/T8agLP5wJfX/d/
nv9e93c28PvPoCf0+yrYdf3j7Pr/RwN/XxLwvex/a8In/H/6H5X32l8=
              
              "], {{-11.25, 
                Rational[-225, 2]}, {-3.75, 
                Rational[225, 2]}}], 
             RasterBox[CompressedData["
1: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

              "], {{-3.75, 
                Rational[-225, 2]}, {11.25, 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{11.25, 
                  Rational[-225, 2]}, {-11.25, 
                  Rational[-225, 2]}, {-11.25, 
                  Rational[225, 2]}, {11.25, 
                  Rational[225, 2]}, {11.25, 
                  Rational[-225, 2]}}, {{
                11.25, -112.5}, {-11.25, -112.5}, {-11.25, 112.5}, {11.25, 
                112.5}, {11.25, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{11.25, -112.5}, {11.25, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{11.25, -112.5}, 
                    Offset[{4., 0}, {11.25, -112.5}]}, {{11.25, -56.25}, 
                    Offset[{4., 0}, {11.25, -56.25}]}, {{11.25, 0.}, 
                    Offset[{4., 0}, {11.25, 0.}]}, {{11.25, 56.25}, 
                    Offset[{4., 0}, {11.25, 56.25}]}, {{11.25, 112.5}, 
                    Offset[{4., 0}, {11.25, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{11.25, -101.25}, 
                    Offset[{2.5, 0.}, {11.25, -101.25}]}, {{11.25, -90.}, 
                    Offset[{2.5, 0.}, {11.25, -90.}]}, {{11.25, -78.75}, 
                    Offset[{2.5, 0.}, {11.25, -78.75}]}, {{11.25, -67.5}, 
                    Offset[{2.5, 0.}, {11.25, -67.5}]}, {{11.25, -67.5}, 
                    Offset[{2.5, 0.}, {11.25, -67.5}]}, {{11.25, -45.}, 
                    Offset[{2.5, 0.}, {11.25, -45.}]}, {{11.25, -33.75}, 
                    Offset[{2.5, 0.}, {11.25, -33.75}]}, {{11.25, -22.5}, 
                    Offset[{2.5, 0.}, {11.25, -22.5}]}, {{11.25, -22.5}, 
                    Offset[{2.5, 0.}, {11.25, -22.5}]}, {{11.25, -11.25}, 
                    Offset[{2.5, 0.}, {11.25, -11.25}]}, {{11.25, 11.25}, 
                    Offset[{2.5, 0.}, {11.25, 11.25}]}, {{11.25, 22.5}, 
                    Offset[{2.5, 0.}, {11.25, 22.5}]}, {{11.25, 22.5}, 
                    Offset[{2.5, 0.}, {11.25, 22.5}]}, {{11.25, 33.75}, 
                    Offset[{2.5, 0.}, {11.25, 33.75}]}, {{11.25, 45.}, 
                    Offset[{2.5, 0.}, {11.25, 45.}]}, {{11.25, 67.5}, 
                    Offset[{2.5, 0.}, {11.25, 67.5}]}, {{11.25, 67.5}, 
                    Offset[{2.5, 0.}, {11.25, 67.5}]}, {{11.25, 78.75}, 
                    Offset[{2.5, 0.}, {11.25, 78.75}]}, {{11.25, 90.}, 
                    Offset[{2.5, 0.}, {11.25, 90.}]}, {{11.25, 101.25}, 
                    Offset[{2.5, 0.}, {11.25, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False], 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{-11.25, -112.5}, {-11.25, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{-11.25, -112.5}, 
                    Offset[{-4., 0}, {-11.25, -112.5}]}, {{-11.25, 90.}, 
                    Offset[{-4., 0}, {-11.25, 90.}]}, {{-11.25, 112.5}, 
                    Offset[{-4., 0}, {-11.25, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{-7., 0.}, {-11.25, -112.5}], 
                    ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["11", TraditionalForm], 
                    Offset[{-7., 0.}, {-11.25, 90.}], 
                    ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Infinity]\"", TraditionalForm], 
                    Offset[{-7., 0.}, {-11.25, 112.5}], 
                    ImageScaled[{1, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 
                    0}, {1, 1}}]}, {ImageSize -> 65, BaselinePosition -> 
                    Bottom, AspectRatio -> NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJx1luk71YkbxgkpW1lqOnZKSalskdRd1pqUplCJFIWQzFDWhmgxKbtQERWZ
sjR2QkWWzuFw7Fs6lrN9z8I0aJoa5vz+gN+L+7qe637xvLrv5/NoeVw+dkFM
REREVKgLQv1vLhkcHStV/ACqx1peSgYLohaxiqa7OOARS/czAzuhHqXg6E5j
wmuquYvUwMFieHjQ757deLbUFV0sxYRafLryVhCw26zKT6ygQW7GmXXGigHn
kF522hsC0+l3JOvf9qAxcYXM0YhpOLRM3A3Zy4X4ipbiH9N7cUq8/+qJsikk
yjltnnvNxXLJvtsN5n3YmxzuZs2exJ7+BXldMx6YF6wvDVb1QWYtjTOmOoke
zmn1beU8cBNLJlJk+3H3UvPCqMMEaK4Zs+r6fATJn1l8sb8f80XKsoJoOqJu
yxvKF/DRmy0KwrEfP/1x9KGL+yd836bTTlIXoFDHhvBaGIBs4MvPW/eM47Cb
6myiigCnxW6tXwoYQn/wB0cxpY/YcYgdMr5OgIeeYZeyWoch76OhPTk5ivLV
xSMSawWQX2X5dWDZKJ7V7bLPKBxB1j3R1OWKAnhqnAljbBrDHY2jrELPYYR4
fFGeWCVAOW+u8W+zj1hy2/DnboUhNLdr89JlBNhyoiY53Wwc3irWjwR/DKDg
0JMonZUCbDKWEW3S/YQucl55Nvqx22PjkSQJAX48PcdJkaBjvnC/tER1Lyp5
f3cNiArgv9XiRlIgHa9n8kjKCj34KV382td/+Vja9/kQw2MCoYM3ZEgeNDCk
fQUv4vgY7rthHGo7iasPTwbpFXRD52G3crUiH8anMki/q02hW6sgiVfTBQu/
sJ0aj3mYKVTO/pGYQpJXVaWpBBVWwWYx03o8OGwqX6IUTyOBHaXP1OvAlzV2
9iuquQi5tuqo40UGFnroObZaZJRu1/0z3oqLa0yZpj41JkRs5rw7RtsQ6fd4
LLCbwFOnf4LWdDDhmRDvt8muBS9zGu7UuAlzdVCQ1BjMAkdTr/a9ZRMGncV/
O8/lgFt8QsR9HRv3i1YIPNUbYM98EnI1jIOImWN/0VLYqNfWraisqAd5N7n/
hzA2VrogxU6Cg8ZmFbWYi/WI5xrbqIazsM5i4V//QA40M++d4FjU4+7YNv2o
SCaC/npMH+7jYJ+Fi1fJtnrQaYa8XdEMfG8ZtVQyIlAl5XffdG898hh2x6xu
TiOzQupeajwBuusiOdW3HntfZcwlxE8hy8CEaBon0Op8RfFGWT3CmmvsZVIn
EX/8naGYPhdjyeW345QasNgZnJT/cAJ65fXhRVe5SPBP0Z5JaECxucnGvfl0
rF9tfHJVPReuZRnWUxqNEHPjkM4Jc526izxrxuNC9u1wWz7tHdz7vOdJox/h
s2Xh4BcSD84nHbxbbd4jRf3Qqh6nMWQn5Cv52PDAQEqkd2wr8pJEVBeoIyiJ
OeXxPICHpM9VC8cz2+FkPUjtsBnGgqaA2pXOAzG4VvnWPTLK3yas8q0dhKHB
nfx/6nhgf+2tM7zYASNzV49HugOQI3uK7hvnQcro/OuB7VSk79sgQkvuQ2QC
QVQt8fDrnl1nqNNdkHgidYz9uQcudrSfr2jwYaBoKXqypRuSHVdpggM0WFS7
vU/aw0fC/oDapmQatHUUI600uqCn6uyce42PEqofr+paH+KoG1NET1NRyxo4
+K2Oj9zOC6IuuoOIXnlz1v3XTpRtPrKQMc+HwOH6Zannw3ggl+p78lYHrrCT
9vjrC8De8Gfn0eVjqOt9NqJ1mYJvxn4xlzyE/abOfjM8Mo7FXlbWhBEZsm9q
cpLSBEhc2eOpaEnHOTnHhW3UdlCseUMfmgUIMNg5Juk8gZpFzyJLkzZItxFD
MrMCKLSVrvY6P4mHtt4N0a4tkA9Re2RPmkF3V3mkdcAUJEhxLzN3NONS1wOf
CMygqHajQUTwNL6ldG0hJb+FU/cWn+ZBAUixByJT1zNAznk/ZHHrDaSnlidm
+QsgGI3STaIyIOdmbCtDacC8qYINRdj7E1pE4dgVJqaNfvE/y32NNfn1g5rx
fNQs/b6xn8QCk2diY0evxeEXBVWuSnxckHQ8/qGOhVBdHfbu3GoUZ+j8Zp7F
g++Xd1mLJ9loaridka5WiWjKA4UAYa6CqWaDf8yxwT5/JjvCqgxuxX5DeWlc
RM8n1K1L4CD5WaDp+fFi+HqLhl6R4qL3adm4hw6B523H1tPq88G1lEqPCCdQ
KGr8qq6OgKJYa/PTDZmghIwczjDnQJRiZlpdKexTcGz6h8OP4ElqjAqcY6F/
6Nf160oIPDAiGzT45KJZJmBrQwETBk7jPvynBGbc476vH3iCjNx5fq8DAxHd
y7RtMwiUMipNYnzy8Ymxdj6GP4V7rKa8HXEEtsxRIisWnkNuQY/aGTmJvMf8
mLqrBNwlbLz0I15Awb9iZ+RXOn7WbKya9SBw6IcQ+4z5IpwqCUxNqxvH9tOa
KZ/sCcxLFbY0XCjF3Rrd+DiLUchJ84ZTjAn478h59I7xCj4BKjs+Ow2iVs+U
ukaZQFrNvhF/xTLsUWsas308gNicanKJDIHwFskIa+cmGNzgHv57qB+se3cZ
nkscaDe2D3Pr2/HGfAu/UKQfx4e0nXZ+Ft6tlSy61QoqpK02q7go9iH8QeKx
TQwOHrdcv+7gSgNTYvWYjmwvus7eJJkNCXn/TaLBLbYXueKpoRQ2DaoWB9gX
KRxMVBTk5MT1Q8vxDpuR0w3Sq9ylhkYOjpT74syVQRBt6h9HDlBBDup8YlIm
9Ldf3lPpMAwzrobkui4yFL4H/dCTz4F/Nkfso8ooZkoLzdwSW5HSnpiflsXB
qdS1BZNjY1AN1T8tfrsdVTkD1/W8ONB5kbV7mZBzOWcDfylbTsbcuQ9FdYbC
PQn347rL6Gh6v8ye0KQg1sjFy26JjdVBboURHRMIX1Qy30anYP++IsleChti
NcWSJpOTUM12CuYe7EBk2n7xs5lsKHFcDzDnprBYOvmp3b0DrV0m3NnzbIQ+
cpe0kWCgUJpsR9LsQIzELZ84A6Ev/7qZrsjEd81z0i9vUqAi62W7eVHICdty
/61aLBy4FhE9eYuM2rCnAQNkFkwdXmrd1Gfj//1X/wHuyNJI
                    "], {{0, 
                    0}, {1, 1}}]}, {ImageSize -> 65, BaselinePosition -> 
                    Bottom, AspectRatio -> NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ThemeGradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "MidShiftBalancedHue", "ThemeGradients", {0, 1}, Blend[
                    "MidShiftBalancedHue", #]& ], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", "#1",
                    "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"\"ColorFunctionShading\"", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"1", "-", 
                   RowBox[{"Rescale", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.9`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "&"}], ")"}]}],
            ",", 
           RowBox[{"\"OpacityFunctionTicks\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0", ",", "\"0\""}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9`", ",", "11"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", "\"\[Infinity]\""}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"\"OpacityFunctionSize\"", "\[Rule]", 
             RowBox[{"Scaled", "[", "0.5`", "]"}]}], ",", 
           RowBox[{"\"OpacityFunctionRange\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"Charting`TickLabels", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                 "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.`", ",", "0.25`", ",", "0.5`", ",", "0.75`", ",", 
                    "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["1", "20"], ",", 
                    FractionBox["1", "10"], ",", 
                    FractionBox["3", "20"], ",", 
                    FractionBox["1", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "5"], ",", 
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "10"], ",", 
                    FractionBox["7", "20"], ",", 
                    FractionBox["2", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["2", "5"], ",", 
                    FractionBox["9", "20"], ",", 
                    FractionBox["1", "2"], ",", 
                    FractionBox["11", "20"], ",", 
                    FractionBox["3", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["3", "5"], ",", 
                    FractionBox["13", "20"], ",", 
                    FractionBox["7", "10"], ",", 
                    FractionBox["3", "4"], ",", 
                    FractionBox["4", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["4", "5"], ",", 
                    FractionBox["17", "20"], ",", 
                    FractionBox["9", "10"], ",", 
                    FractionBox["19", "20"], ",", "1"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.881786305334416*^9, 3.881786322554047*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"3d17e1cf-3d57-40c8-9677-6d9a4adc7f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionExpand", "[", 
  RowBox[{"Fibonacci", "[", 
   FractionBox["1", "2"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.881786612802052*^9, 3.881786627939694*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"dd192705-8e75-4ed2-8520-45f20a775125"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   FractionBox["1", "10"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SqrtBox["5"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.88178662808488*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"deac5df3-73e6-4122-b777-da0b15f71941"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"InverseFunction", "[", "Fibonacci", "]"}]], "Input",
 CellChangeTimes->{{3.881786635001931*^9, 3.881786645787517*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"0f4a860c-f4f3-431a-a0cc-a642b1ea9bb5"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SuperscriptBox["Fibonacci", 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]],
   InverseFunction,
   Editable->False], "[", 
  FractionBox["1", "2"], "]"}]], "Input",
 CellChangeTimes->{{3.881786648081126*^9, 3.881786649697557*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"74edf5d5-ae8f-49cf-a54b-170c6c47be32"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"-12.5\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"], 
         ImageSizeCache -> {12.5859375, {1., 2.}}]}, "RowDefault"], 
      ShowStringCharacters -> 
      False], -12.50086662263888470647543726954609155655`15.954589770191003, 
     Editable -> False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                 RowBox[{"Fibonacci", "[", "#1", "]"}]}]}], "&"}], ",", 
           
           RowBox[{"-", 
             "12.5008666226388848254081765103961366618687029999454244849636`\
30."}]}], "}"}], "]"}], Short[#, 7]& ], -12.500866622638885`},
   "NumericalApproximation"],
  Root[{-1 + 
    2 Fibonacci[#]& , \
-12.5008666226388848254081765103961366618687029999454244849636`30.}]]], \
"Output",
 CellChangeTimes->{3.881786650050379*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"5fa98d84-6cce-4ea9-a254-56464903a10b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     SuperscriptBox["Fibonacci", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]],
     InverseFunction,
     Editable->False], "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881786659723382*^9, 3.881786671273157*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"b14794f9-65b1-4914-b9ba-71d833d1fc2a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVjn040wkAx9d0kp46vTwV59ieuz2S4VRPifLtUl1dzl1SdCWXZER1FaEz
vahDhlAOR572FJHLS7psEi0ZcwtNpryNrb1vv83rCTn3x/f5/PV5Pl9q0Bmf
E2QSibRnbv+zID7I1CU4xYN/62mNsaPQo1FE8fKjhKFDauIYui4Os03PEyiU
WFz8qS4u2jcFBQ2ptp9RktEaO9a4X5ILOhGcNstIR2Wik3EgoxB9S+58mhZn
ouXHvOPF19iI2Bp1asI2Fxz6AmurqmI87pTcG/XMxwF/n0iyfSk+hnv1Ghlz
HsnPOzq1DDuEGbRxMRuWSaGHeJkVEE2F3jLYluAwcydn7/tqXODbfENUluKH
JMcih/4nsMrqbNV5lqFiRb6Xc9/fCFq7zUTDKEfllhnxG2ENYsoWcYbFVQgJ
r/vq1OVnWNAzZKez5UCYvtgrreQFuhvqorRKDqyzeUV2S3koLcp5qankwvb0
Q8uKaB68z3kHqj2fIYCh2cf59iWyF3KzFYx6nNurrqkRNGJZfjPZKObhsHs3
C0/5uCsoPKuxbYHjmIIvpQgxmvNk7QCrBeThGGX+RSF2MVqlbyZbMHK0tFAm
EkJrMnGAKxJgUL7mHf36a7hu9XZLTvwHMn/5n2NDbWgvnybbEW2oTThMHtrV
gUsC+vcugSJMzWbVNIlFeFSe3BPh9B7LBSYb19d1g4GOXO05KZhX+8P4KglI
7HFuT4oUWzjSKq9pCXLmW/cK7knBZzE7epYMorklxKakS4pOCSt+9YZBrPGd
Zp9wk8Hitu/+ZZcGoQy1K+uf9wEPTDNmtq0awslM5vP2m3KUmlMTs3ykII+x
B+pL5LgQtTS5N0SKPL9mUjlPDptBK7fNv0khsF7umToqB5NGBDjPdR2KH/D3
+Ctg7fZp/RcTUmhrRe08WyV+n98bGXhXhtMf7KXVj1SYmlk4Ilkkh+ToO7MX
LSrcGGBR62ly7O9OchLKVFjpd+SjEHK4tipiP1ipIXM3DU6IlMOk8r7FykQ1
BB+jq2MkcuTEUT2iAzVg7bF/4NCogPl4+/GEixr8mnpFqxhUgHnmcnL6bQ1U
xoxjY7MKBAUNdBa3ahBCe+tisVUJ+u6C8O5NWtzsY8YX1SrxYrll7mYLHQYP
ZYZsfK3ChtTm5zsddEiji5Mmh1UoMo2R7dulA/ffme2/rFaDNdnlfDJOhz/e
Vq7yOKHGwYFbTXlKHTb5j3bFmGnQ7L9DW2Six7oln+dnrtfA/c3I0sc2emQ9
cdrCmftNeeUT0Oqrx3WXlMCrtRqoSy1Gpxr04C9WJVpc0+LI1w2WZr16jJbL
s7O5WrQVnMGKCT3OH7ozuX1Ei+qbr2/QHQmMmf+80TlCBzvz+ArX3QReueYM
2/+lQ16CY9eO4wQCVGZ7hUYdLl1gUQNyCWQv6PQnkvQYJty/C6smoORFpqX2
6REcpomIaiNwjHRdFe5GQDyUl3lFTeCsbz31KJsAzYnW20Q2oMDf+hltsQH9
6mm9l4UBVcP3z1IOGpBT3DlP9KUBzZzkNWyuAdSo8fQJOwPGYh+e3xZkxH/O
cGxM
       "]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[{{1.0421021698602844`, 2.0600046946851016`}, {
       1.0448522762609087`, 2.063626868788268}, {
       1.0477795603848223`, -2.6917240156221034`}, {
       1.04993650658139, -2.6921915663616933`}}]},
     Annotation[#, "Charting`Private`Tag$81681#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-2.6921915663616933`, 6.457797075598839}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.88178666717733*^9, 3.881786671808509*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"58355032-50d8-4545-ac73-1277161dc953"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Fibonacci", "[", "x", "]"}], ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881786778283238*^9, 3.881786806449798*^9}, {
  3.8817868428593273`*^9, 3.8817868476500998`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"7b97fe0f-fe39-4ade-9f43-5407d4edc9b1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$84839#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {-0.2951904810836725, 3.873680211717789}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.881786806595187*^9, {3.881786843288259*^9, 3.881786848444478*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"b674b305-188e-4b69-b58e-150972da23a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v1", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Fibonacci", "[", "x", "]"}], ",", "x"}], "]"}]}], "==", 
       "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"root1", "=", 
  RowBox[{"Root", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Fibonacci", "[", "x", "]"}], ",", "x"}], "]"}]}], "/.", 
       RowBox[{"x", "->", "#"}]}], "&"}], ",", "v1"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Fibonacci", "[", "x", "]"}], ",", "x"}], "]"}]}], "==", 
       "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"root2", "=", 
  RowBox[{"Root", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Fibonacci", "[", "x", "]"}], ",", "x"}], "]"}]}], "/.", 
       RowBox[{"x", "->", "#"}]}], "&"}], ",", "v2"}], "}"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.881786857611271*^9, 3.881786872535016*^9}, {
  3.881787005323619*^9, 3.8817871663916273`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"3002d25f-7dfe-4ab0-9c97-804bc3495609"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"1.09\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     1.09457610523164561300291097722947597504`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             FractionBox[
              RowBox[{
                SuperscriptBox["GoldenRatio", 
                 RowBox[{"-", "#1"}]], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], 
              SqrtBox["5"]], "&"}], ",", 
           "1.09457610523164539095830605219816789031`12.954589770191005"}], 
         "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
   "NumericalApproximation"],
  Root[{(5^Rational[-1, 2] GoldenRatio^(-#)) (
     GoldenRatio^(2 #) Log[GoldenRatio] + Cos[Pi #] Log[GoldenRatio] + 
     Pi Sin[Pi #])& , 
    1.09457610523164539095830605219816789031`12.954589770191005}]]], "Output",\

 CellChangeTimes->{3.88178716685353*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"7970a3d2-f388-44f4-b9f2-baf34e934fc8"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"Root", 
    InterpretationBox[
     StyleBox[
      TemplateBox[{"\"1.68\"", 
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
      ShowStringCharacters -> False], 
     1.67668837258158420766562812787014991045`15.954589770191003, Editable -> 
     False], 
    TagBox[
     RowBox[{"Root", "[", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             FractionBox[
              RowBox[{
                SuperscriptBox["GoldenRatio", 
                 RowBox[{"-", "#1"}]], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], 
              SqrtBox["5"]], "&"}], ",", 
           "1.67668837258158576197786260308930650353`12.954589770191005"}], 
         "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
   "NumericalApproximation"],
  Root[{(5^Rational[-1, 2] GoldenRatio^(-#)) (
     GoldenRatio^(2 #) Log[GoldenRatio] + Cos[Pi #] Log[GoldenRatio] + 
     Pi Sin[Pi #])& , 
    1.67668837258158576197786260308930650353`12.954589770191005}]]], "Output",\

 CellChangeTimes->{3.881787166864417*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"3531c871-de85-468f-abad-e07912f2511d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"root2", "-", "root1"}]], "Input",
 CellChangeTimes->{{3.881789280243395*^9, 3.8817892943780317`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"d0277d76-ee36-4acc-81e6-46f10f2b38e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"1.09\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       1.09457610523164561300291097722947597504`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               FractionBox[
                RowBox[{
                  SuperscriptBox["GoldenRatio", 
                   RowBox[{"-", "#1"}]], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], 
                SqrtBox["5"]], "&"}], ",", 
             "1.09457610523164539095830605219816789031`12.954589770191005"}], 
           "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
     "NumericalApproximation"],
    Root[{
     5^Rational[-1, 2] 
      GoldenRatio^(-#) (GoldenRatio^(2 #) Log[GoldenRatio] + 
       Cos[Pi #] Log[GoldenRatio] + Pi Sin[Pi #])& , 
      1.09457610523164539095830605219816789031`12.954589770191005}]]}], "+", 
  InterpretationBox[
   TemplateBox[{"Root", 
     InterpretationBox[
      StyleBox[
       TemplateBox[{"\"1.68\"", 
         DynamicBox[
          FEPrivate`FrontEndResource[
          "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
       ShowStringCharacters -> False], 
      1.67668837258158420766562812787014991045`15.954589770191003, Editable -> 
      False], 
     TagBox[
      RowBox[{"Root", "[", 
        RowBox[{"{", 
          RowBox[{
            RowBox[{
              FractionBox[
               RowBox[{
                 SuperscriptBox["GoldenRatio", 
                  RowBox[{"-", "#1"}]], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"Log", "[", "GoldenRatio", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], ")"}]}], 
               SqrtBox["5"]], "&"}], ",", 
            "1.67668837258158576197786260308930650353`12.954589770191005"}], 
          "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
    "NumericalApproximation"],
   Root[{5^Rational[-1, 2] 
     GoldenRatio^(-#) (GoldenRatio^(2 #) Log[GoldenRatio] + 
      Cos[Pi #] Log[GoldenRatio] + Pi Sin[Pi #])& , 
     1.67668837258158576197786260308930650353`12.954589770191005}]]}]], \
"Output",
 CellChangeTimes->{3.881789294517912*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"c721efc8-be77-45c6-91ae-13fedd8292a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Fibonacci", "[", "x", "]"}], ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "root1", ",", "root2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881787716203355*^9, 3.881787734698392*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"515f5b62-36ce-4180-85d6-4ccd6f7231cd"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox["5"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ")"}], 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"1.09\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"], 
              ImageSizeCache -> {9.62109375, {1., 1.}}]}, "RowDefault"], 
           ShowStringCharacters -> False], 
          1.09457610523164561300291097722947597504`15.954589770191003, 
          Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"ArcCsch", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "2", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], 
                   SqrtBox["5"]], "&"}], ",", 
                "1.09457610523164539095830605219816789031`12.954589770191005"}\
], "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
        "NumericalApproximation"],
       Root[{
        5^Rational[-1, 2] (GoldenRatio^(2 #) ArcCsch[2] + 
          ArcCsch[2] Cos[Pi #] + Pi Sin[Pi #])& , 
         1.09457610523164539095830605219816789031`12.954589770191005}]]]}], 
    "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox["5"]}], ")"}]}], ")"}], 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.68\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"], 
             ImageSizeCache -> {9.62109375, {1., 1.}}]}, "RowDefault"], 
          ShowStringCharacters -> False], 
         1.67668837258158420766562812787014991045`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 FractionBox[
                  RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"ArcCsch", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "2", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], 
                  SqrtBox["5"]], "&"}], ",", 
               "1.67668837258158576197786260308930650353`12.954589770191005"}]\
, "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
       "NumericalApproximation"],
      Root[{
       5^Rational[-1, 2] (GoldenRatio^(2 #) ArcCsch[2] + ArcCsch[2] Cos[Pi #] + 
         Pi Sin[Pi #])& , 
        1.67668837258158576197786260308930650353`12.954589770191005}]]], "+", 
    
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SqrtBox["5"]}]], ")"}], 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"1.09\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"], 
              ImageSizeCache -> {9.62109375, {1., 1.}}]}, "RowDefault"], 
           ShowStringCharacters -> False], 
          1.09457610523164561300291097722947597504`15.954589770191003, 
          Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"ArcCsch", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "2", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], 
                   SqrtBox["5"]], "&"}], ",", 
                "1.09457610523164539095830605219816789031`12.954589770191005"}\
], "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
        "NumericalApproximation"],
       Root[{
        5^Rational[-1, 2] (GoldenRatio^(2 #) ArcCsch[2] + 
          ArcCsch[2] Cos[Pi #] + Pi Sin[Pi #])& , 
         1.09457610523164539095830605219816789031`12.954589770191005}]]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", " ", 
       InterpretationBox[
        TemplateBox[{"Root", 
          InterpretationBox[
           StyleBox[
            TemplateBox[{"\"1.09\"", 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "NumericalApproximationElider"]]}, 
             "RowDefault"], ShowStringCharacters -> False], 
           1.09457610523164561300291097722947597504`15.954589770191003, 
           Editable -> False], 
          TagBox[
           RowBox[{"Root", "[", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"ArcCsch", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "2", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], 
                    SqrtBox["5"]], "&"}], ",", 
                 "1.09457610523164539095830605219816789031`12.\
954589770191005"}], "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
         "NumericalApproximation"],
        Root[{
         5^Rational[-1, 2] (GoldenRatio^(2 #) ArcCsch[2] + 
           ArcCsch[2] Cos[Pi #] + Pi Sin[Pi #])& , 
          1.09457610523164539095830605219816789031`12.954589770191005}]]}], 
      "]"}]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SqrtBox["5"]}]], ")"}], 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"1.68\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"], 
              ImageSizeCache -> {9.62109375, {1., 1.}}]}, "RowDefault"], 
           ShowStringCharacters -> False], 
          1.67668837258158420766562812787014991045`15.954589770191003, 
          Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"ArcCsch", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "2", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], 
                   SqrtBox["5"]], "&"}], ",", 
                "1.67668837258158576197786260308930650353`12.954589770191005"}\
], "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
        "NumericalApproximation"],
       Root[{
        5^Rational[-1, 2] (GoldenRatio^(2 #) ArcCsch[2] + 
          ArcCsch[2] Cos[Pi #] + Pi Sin[Pi #])& , 
         1.67668837258158576197786260308930650353`12.954589770191005}]]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", " ", 
       InterpretationBox[
        TemplateBox[{"Root", 
          InterpretationBox[
           StyleBox[
            TemplateBox[{"\"1.68\"", 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "NumericalApproximationElider"]]}, 
             "RowDefault"], ShowStringCharacters -> False], 
           1.67668837258158420766562812787014991045`15.954589770191003, 
           Editable -> False], 
          TagBox[
           RowBox[{"Root", "[", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["GoldenRatio", 
                    RowBox[{"2", " ", "#1"}]], " ", 
                    RowBox[{"ArcCsch", "[", "2", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"ArcCsch", "[", "2", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], 
                    SqrtBox["5"]], "&"}], ",", 
                 "1.67668837258158576197786260308930650353`12.\
954589770191005"}], "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
         "NumericalApproximation"],
        Root[{
         5^Rational[-1, 2] (GoldenRatio^(2 #) ArcCsch[2] + 
           ArcCsch[2] Cos[Pi #] + Pi Sin[Pi #])& , 
          1.67668837258158576197786260308930650353`12.954589770191005}]]}], 
      "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.881787743139599*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"4ac20b9a-d69b-4e11-bdcb-057f92b0bedd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Out", "[", "121", "]"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.8817877661392307`*^9, 3.881787769962166*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"4be5d0bd-f4b7-4520-b990-c491c4a22d31"],

Cell[BoxData[
 RowBox[{"-", 
  "0.1128779444232152079074769249432996682003711683796350189152037880741094611\
571312900756583449426052712640832802515414`100."}]], "Output",
 CellChangeTimes->{3.881787770417739*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"95c94c4b-71bf-4167-a718-8be3592667f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"root2", "-", "root1"}], "//", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "100"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.881787168355266*^9, 3.881787189362116*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"4b783896-3908-4528-a8ea-3a905d5419b4"],

Cell[BoxData["0.\
582112267349938522514554196630726614849145742115755114018339055546291037499057\
7746278496023012042707256647048345049`100."], "Output",
 CellChangeTimes->{3.881787189537726*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"fe9eb9ef-3d0f-415d-b9b0-276b546ee947"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881787343355254*^9, 3.8817873485700903`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"717242a1-1a61-4ca2-b075-5a0b5ddf1335"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$146155#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 4.999999758443965}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.881787348731319*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"cf8ab016-1a4f-4d3e-bd21-4cf7ccf5c819"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "x", "]"}], ",", 
     RowBox[{"0", "<", "x", "<", 
      FractionBox["3", "2"]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8817873505622387`*^9, 3.881787389354553*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"6d699d09-c814-4965-b6a3-d51e2e6815af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Fibonacci", "[", 
    InterpretationBox[
     TemplateBox[{"Root", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{"\"1.09\"", 
           DynamicBox[
            FEPrivate`FrontEndResource[
            "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"],
          ShowStringCharacters -> False], 
        1.09457610523164561300291097722947597504`15.954589770191003, Editable -> 
        False], 
       TagBox[
        RowBox[{"Root", "[", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{
                RowBox[{
                  RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                  RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}], "+", 
                  RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}]}], "+", 
                  RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "&"}], ",", 
              "1.09457610523164567010860173169352338451`20.298432303029017"}],
             "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
      "NumericalApproximation"],
     Root[{-Log[2] + 
       Log[1 + 5^Rational[1, 2]] + (
         E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Cos[Pi #]) (-Log[2] + 
         Log[1 + 5^Rational[1, 2]]) + (
         E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Pi) Sin[Pi #]& , 
       1.09457610523164567010860173169352338451`20.298432303029017}]], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.09\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> False], 
         1.09457610523164561300291097722947597504`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "&"}], ",", 
               "1.09457610523164567010860173169352338451`20.298432303029017"}]\
, "}"}], "]"}], Short[#, 7]& ], 1.0945761052316456`},
       "NumericalApproximation"],
      Root[{-Log[2] + 
        Log[1 + 5^Rational[1, 2]] + (
          E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Cos[Pi #]) (-Log[2] + 
          Log[1 + 5^Rational[1, 2]]) + (
          E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Pi) Sin[Pi #]& , 
        1.09457610523164567010860173169352338451`20.298432303029017}]]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.881787467579999*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"dfed4793-a577-43dc-8b00-b78fdedb6293"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "x", "]"}], ",", 
     RowBox[{"1", "<", "x", "<", "3"}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.881787482130118*^9, 3.881787494874351*^9}, {
  3.88178759375113*^9, 3.8817876032875957`*^9}, {3.881787638186466*^9, 
  3.88178764274506*^9}, {3.881787673538068*^9, 3.8817876765141697`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b4308284-fe45-4900-88ac-a643819fb875"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Fibonacci", "[", 
    InterpretationBox[
     TemplateBox[{"Root", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{"\"1.68\"", 
           DynamicBox[
            FEPrivate`FrontEndResource[
            "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"],
          ShowStringCharacters -> False], 
        1.67668837258158420766562812787014991045`15.954589770191003, Editable -> 
        False], 
       TagBox[
        RowBox[{"Root", "[", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{
                RowBox[{
                  RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                  RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}], "+", 
                  RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}]}], "+", 
                  RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "&"}], ",", 
              "1.67668837258158419262338177581784376402`20.302014944801574"}],
             "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
      "NumericalApproximation"],
     Root[{-Log[2] + 
       Log[1 + 5^Rational[1, 2]] + (
         E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Cos[Pi #]) (-Log[2] + 
         Log[1 + 5^Rational[1, 2]]) + (
         E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Pi) Sin[Pi #]& , 
       1.67668837258158419262338177581784376402`20.302014944801574}]], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"1.68\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> False], 
         1.67668837258158420766562812787014991045`15.954589770191003, 
         Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Log", "[", "2", "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", 
                    SqrtBox["5"]}], "]"}]}], ")"}], " ", "#1"}]], " ", 
                    "\[Pi]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "&"}], ",", 
               "1.67668837258158419262338177581784376402`20.302014944801574"}]\
, "}"}], "]"}], Short[#, 7]& ], 1.6766883725815842`},
       "NumericalApproximation"],
      Root[{-Log[2] + 
        Log[1 + 5^Rational[1, 2]] + (
          E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Cos[Pi #]) (-Log[2] + 
          Log[1 + 5^Rational[1, 2]]) + (
          E^((2 (Log[2] - Log[1 + 5^Rational[1, 2]])) #) Pi) Sin[Pi #]& , 
        1.67668837258158419262338177581784376402`20.302014944801574}]]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8817876778563967`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"4040d690-7beb-4e22-b691-2e060353a24f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Fibonacci", "[", "x", "]"}], "//", "FunctionExpand"}]], "Input",
 CellChangeTimes->{{3.8817887787789783`*^9, 3.88178878201245*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"1573e990-f745-44e2-b2d1-c28f90a84bc5"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox["5"]}], ")"}]}], ")"}], "x"], "-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        SqrtBox["5"]}]], ")"}], "x"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], 
  SqrtBox["5"]]], "Output",
 CellChangeTimes->{3.8817887821660233`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"624f3772-6a30-48fc-b370-e82d25b03025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Fibonacci", "[", "n", "]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TraditionalForm", "@", "#"}], ",", 
     RowBox[{"N", "@", "#"}]}], "}"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.881788784443234*^9, 3.881788821306491*^9}, {
  3.881789007451695*^9, 3.881789020210351*^9}, {3.881789204691206*^9, 
  3.881789206266528*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"9346ccdb-54d0-402c-afd2-fabc6f4d9fdc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    FormBox[
     RowBox[{
      FractionBox["1", "4"], " ", 
      SqrtBox["5"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", 
           TemplateBox[{"0", "1", 
             FractionBox["1", 
              SuperscriptBox[
               TagBox["\[Phi]", 
                Function[{}, GoldenRatio]], "4"]]},
            "QPolyGamma3"]}], "-", 
          RowBox[{"4", " ", 
           TemplateBox[{"0", "1", 
             FractionBox["1", 
              SuperscriptBox[
               TagBox["\[Phi]", 
                Function[{}, GoldenRatio]], "2"]]},
            "QPolyGamma3"]}], "+", 
          RowBox[{"log", "(", "5", ")"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"log", "(", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox["5"]}], ")"}]}], ")"}]}]], "+", 
        SuperscriptBox[
         TemplateBox[{"2", "0", 
           FractionBox["1", 
            SuperscriptBox[
             TagBox["\[Phi]", 
              Function[{}, GoldenRatio]], "2"]]},
          "EllipticTheta"], "2"]}], ")"}]}],
     TraditionalForm],
    TraditionalForm,
    Editable->True], ",", "3.3598856662431773`"}], "}"}]], "Output",
 CellChangeTimes->{3.881788821471278*^9, 3.881789020280225*^9, 
  3.881789206407164*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"8a6a9b81-d029-48a9-90b6-3ee2453471c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Fibonacci", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881788907331326*^9, 3.8817889256107597`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"f3ba8745-dce3-4cb8-a9ef-dd63765b9783"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$265272#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks["Infinite", {
       Charting`InfiniteScale["Infinite"]["Scale"], 
       Charting`InfiniteScale["Infinite"]["InverseScale"]}, "Nice", 
      WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{
       Charting`InfiniteScale["Infinite"]["Scale"], 
       Charting`InfiniteScale["Infinite"]["InverseScale"]}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Charting`InfiniteScale["Infinite"]["InverseScale"][#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Charting`InfiniteScale["Infinite"]["InverseScale"][#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1}, {0., 2.4918160039459227`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks["Infinite", {
       Charting`InfiniteScale["Infinite"]["Scale"], 
       Charting`InfiniteScale["Infinite"]["InverseScale"]}, "Nice", 
      WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
     Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {0.1925824035672523, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {0.6180339887498949, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {0.9049875621120891, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {0.2769839649484336, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.35078105935821213`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.7807764064044151, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.8471270883830364, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.8827822185373186, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {1, 
       FormBox["\[Infinity]", TraditionalForm], {0.01, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{{3.8817889202239237`*^9, 3.881788925955475*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"260622f9-190d-4ef0-897f-5c8b0633594e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Fibonacci", "[", "x", "]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "100"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8817889302183447`*^9, 3.8817889745147038`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"3e7adaa5-2a80-428a-b04a-e89ff7cc7b37"],

Cell[BoxData["2.\
848414230552119925891179640475217614612050016606365910732359320324076142656064\
854447957099796278563169403041705888`100."], "Output",
 CellChangeTimes->{3.8817889771461363`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"699c37df-560c-45b7-b4c5-d5e2f241aef6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Fibonacci", "[", "x", "]"}]}], ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881789052623522*^9, 3.881789055514255*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"108774bb-2871-4d63-9207-e75591c59810"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3OCYc1r67/9wkgjLt+3t/+H/B2A1Es4=
       "]]},
     Annotation[#, "Charting`Private`Tag$412355#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks["Infinite", {
       Charting`InfiniteScale["Infinite"]["Scale"], 
       Charting`InfiniteScale["Infinite"]["InverseScale"]}, "Nice", 
      WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{
       Charting`InfiniteScale["Infinite"]["Scale"], 
       Charting`InfiniteScale["Infinite"]["InverseScale"]}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Charting`InfiniteScale["Infinite"]["InverseScale"][#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Charting`InfiniteScale["Infinite"]["InverseScale"][#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1}, {-0.8471889086819941, 0.3262679089682445}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks["Infinite", {
       Charting`InfiniteScale["Infinite"]["Scale"], 
       Charting`InfiniteScale["Infinite"]["InverseScale"]}, "Nice", 
      WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
     Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}}, {0.1925824035672523, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {0.6180339887498949, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {0.9049875621120891, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {0.2769839649484336, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.35078105935821213`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.7807764064044151, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.8471270883830364, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.8827822185373186, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {1, 
       FormBox["\[Infinity]", TraditionalForm], {0.01, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{3.8817891469937267`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"e824347d-ad50-4058-86e0-da937b716bfc"]
}, Open  ]]
},
WindowSize->{960, 579},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/Fibonacci.nb"},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6a8b386f-a3e4-41da-9774-1f11236d8374"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 380, 8, 33, "Input",ExpressionUUID->"3b391d36-bc94-4127-bbad-b74bd71155f3"],
Cell[963, 32, 3845, 96, 262, "Output",ExpressionUUID->"cb44df9e-db05-41e8-a06d-7834167a4621"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4845, 133, 422, 9, 33, "Input",ExpressionUUID->"9812f624-477a-4d7f-87fa-9771e791795a"],
Cell[5270, 144, 9141, 169, 564, "Output",ExpressionUUID->"b8d89bc2-adf6-488d-8635-f7c1ba264425"]
}, Open  ]],
Cell[14426, 316, 365, 8, 33, "Input",ExpressionUUID->"03197bfb-9f29-49be-83cc-4950e671988b"],
Cell[CellGroupData[{
Cell[14816, 328, 392, 10, 33, "Input",ExpressionUUID->"09fc4db3-fe1b-4bbd-b071-efccd2cbfe3e"],
Cell[15211, 340, 245, 4, 37, "Output",ExpressionUUID->"0f425629-d639-4995-926b-1e79a89244fc"]
}, Open  ]],
Cell[15471, 347, 444, 12, 35, "Input",ExpressionUUID->"2264d1c2-0fc4-45ad-ad91-4a4faab20fde"],
Cell[CellGroupData[{
Cell[15940, 363, 484, 11, 33, "Input",ExpressionUUID->"cd12adbb-2645-483e-ab54-886d4f3b1884"],
Cell[16427, 376, 123430, 2127, 405, "Output",ExpressionUUID->"3d17e1cf-3d57-40c8-9677-6d9a4adc7f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139894, 2508, 270, 5, 48, "Input",ExpressionUUID->"dd192705-8e75-4ed2-8520-45f20a775125"],
Cell[140167, 2515, 269, 8, 56, "Output",ExpressionUUID->"deac5df3-73e6-4122-b777-da0b15f71941"]
}, Open  ]],
Cell[140451, 2526, 221, 3, 33, "Input",ExpressionUUID->"0f4a860c-f4f3-431a-a0cc-a642b1ea9bb5"],
Cell[140675, 2531, 350, 10, 48, InheritFromParent,ExpressionUUID->"74edf5d5-ae8f-49cf-a54b-170c6c47be32"],
Cell[141028, 2543, 1168, 32, 45, "Output",ExpressionUUID->"5fa98d84-6cce-4ea9-a254-56464903a10b"],
Cell[CellGroupData[{
Cell[142221, 2579, 456, 13, 35, "Input",ExpressionUUID->"b14794f9-65b1-4914-b9ba-71d833d1fc2a"],
Cell[142680, 2594, 5818, 115, 258, "Output",ExpressionUUID->"58355032-50d8-4545-ac73-1277161dc953"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148535, 2714, 464, 11, 33, "Input",ExpressionUUID->"7b97fe0f-fe39-4ade-9f43-5407d4edc9b1"],
Cell[149002, 2727, 15697, 276, 263, "Output",ExpressionUUID->"b674b305-188e-4b69-b58e-150972da23a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164736, 3008, 1705, 55, 104, "Input",ExpressionUUID->"3002d25f-7dfe-4ab0-9c97-804bc3495609"],
Cell[166444, 3065, 1803, 44, 45, "Output",ExpressionUUID->"7970a3d2-f388-44f4-b9f2-baf34e934fc8"],
Cell[168250, 3111, 1804, 44, 45, "Output",ExpressionUUID->"3531c871-de85-468f-abad-e07912f2511d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170091, 3160, 208, 4, 33, "Input",ExpressionUUID->"d0277d76-ee36-4acc-81e6-46f10f2b38e1"],
Cell[170302, 3166, 3591, 89, 60, "Output",ExpressionUUID->"c721efc8-be77-45c6-91ae-13fedd8292a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173930, 3260, 428, 11, 33, "Input",ExpressionUUID->"515f5b62-36ce-4180-85d6-4ccd6f7231cd"],
Cell[174361, 3273, 10774, 269, 139, "Output",ExpressionUUID->"4ac20b9a-d69b-4e11-bdcb-057f92b0bedd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185172, 3547, 263, 6, 33, "Input",ExpressionUUID->"4be5d0bd-f4b7-4520-b990-c491c4a22d31"],
Cell[185438, 3555, 296, 6, 76, "Output",ExpressionUUID->"95c94c4b-71bf-4167-a718-8be3592667f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185771, 3566, 300, 7, 33, "Input",ExpressionUUID->"4b783896-3908-4528-a8ea-3a905d5419b4"],
Cell[186074, 3575, 274, 4, 61, "Output",ExpressionUUID->"fe9eb9ef-3d0f-415d-b9b0-276b546ee947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186385, 3584, 327, 8, 33, "Input",ExpressionUUID->"717242a1-1a61-4ca2-b075-5a0b5ddf1335"],
Cell[186715, 3594, 9548, 176, 281, "Output",ExpressionUUID->"cf8ab016-1a4f-4d3e-bd21-4cf7ccf5c819"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196300, 3775, 384, 10, 49, "Input",ExpressionUUID->"6d699d09-c814-4965-b6a3-d51e2e6815af"],
Cell[196687, 3787, 5528, 132, 60, "Output",ExpressionUUID->"dfed4793-a577-43dc-8b00-b78fdedb6293"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202252, 3924, 503, 11, 33, "Input",ExpressionUUID->"b4308284-fe45-4900-88ac-a643819fb875"],
Cell[202758, 3937, 5530, 132, 60, "Output",ExpressionUUID->"4040d690-7beb-4e22-b691-2e060353a24f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208325, 4074, 249, 5, 33, "Input",ExpressionUUID->"1573e990-f745-44e2-b2d1-c28f90a84bc5"],
Cell[208577, 4081, 593, 21, 83, "Output",ExpressionUUID->"624f3772-6a30-48fc-b370-e82d25b03025"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209207, 4107, 614, 17, 51, "Input",ExpressionUUID->"9346ccdb-54d0-402c-afd2-fabc6f4d9fdc"],
Cell[209824, 4126, 1508, 47, 110, "Output",ExpressionUUID->"8a6a9b81-d029-48a9-90b6-3ee2453471c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211369, 4178, 359, 9, 33, "Input",ExpressionUUID->"f3ba8745-dce3-4cb8-a9ef-dd63765b9783"],
Cell[211731, 4189, 20716, 364, 275, "Output",ExpressionUUID->"260622f9-190d-4ef0-897f-5c8b0633594e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232484, 4558, 467, 13, 51, "Input",ExpressionUUID->"3e7adaa5-2a80-428a-b04a-e89ff7cc7b37"],
Cell[232954, 4573, 279, 5, 76, "Output",ExpressionUUID->"699c37df-560c-45b7-b4c5-d5e2f241aef6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233270, 4583, 450, 12, 33, "Input",ExpressionUUID->"108774bb-2871-4d63-9207-e75591c59810"],
Cell[233723, 4597, 23734, 414, 267, "Output",ExpressionUUID->"e824347d-ad50-4058-86e0-da937b716bfc"]
}, Open  ]]
}
]
*)

